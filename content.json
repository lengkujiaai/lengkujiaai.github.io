{"meta":{"title":"冷酷加爱","subtitle":null,"description":null,"author":"史海龙","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-11-18T02:12:44.000Z","updated":"2018-11-18T02:21:24.090Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-18T02:23:04.000Z","updated":"2018-11-18T02:23:28.505Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"2017年的java学习笔记","date":"2018-11-12T10:53:42.000Z","updated":"2018-11-13T03:05:21.638Z","comments":true,"path":"notebook/2017年的java学习笔记.html","permalink":"http://yoursite.com/notebook/2017年的java学习笔记.html","excerpt":"","text":"5天基础—-5天面向对象—-2天高级应用——————————————–5天基础———————————————————-java—-SE—-客户端程序 —-EE—–服务器端程序 —ME—-手机程序 Java内存结构：栈——————局部信息堆——————对象code方法区——类的信息，静态方法 基本类型——-8种引用类型（很多）——基本5种—–类、接口、数组、枚举、标注import java.util.Scanner; 从事测试工具的开发很厉害文档注释 —– /* / ———生成javaDoc文档 单例模式—–一种设计模式——-保证一个类在系统中最多只创建一个对象工厂模式Factory：可以将不同的Animal子类对象看作产品，将获取这些对象的类看作工厂 class AnimalFactory { public static Animal getAnimal(){——-} //静态方法可以通过类名直接调用 }//改变业务时无需修改代码，生产产品的当然是工厂了 修饰符——protected（主要供子类使用）———private（主要本类用） 修饰符 本类 同包 子类 其他public OK——OK——–OK——-OKprotected OK——OK——–OKDefault OK——OKprivate OK Super（）处于构造函数第一行（如果不写，默认也有，在第一行）java.lang.Object类是所有类的共同父类创建子类对象会先创建父类对象 overload—重载——便于用户少记名字override—重写——-子类修改父类方法的定义多态——-1、对象不变 ——-2、编译时调用编译时类型已定义的方法 ——3、运行时调用覆盖后的方法———不能调用子类特有的方法多态——-1、基本类型多态 double 啊= 2； ——-2、类多态 ——-3、方法多态——-1）、编译时多态—–overload 2）、运行时多态—-override 父类 —-编译时的类型—–编译器理解 子类——运行时类型——JVM理解——————————————–5天面向对象—————————————————–需求分析：得到《需求分析规格说明书》是软件分析、设计、开发、测试、维护等的重要依据系统分析：问题空间。OOA，根据名词、动词将问题进行分类和归纳系统设计：解空间。OOD软件建模使用UML语言。UML统一建模语言特点：使用各种图形表达设计1、静态建模——-1）、用例图 ——–2）、类图：类的基本信息以及类的关系，使用UML工具画类图2、动态建模——-时序图：对象的生命周期。按时间顺序表示系统功能的不同步骤myeclipse提供UML插件（需要先注册） 面向对象三大特性：封装、继承、多态（一种类型，呈现多种状态）static、final、abstract： 1、不能修饰局部变量 2、可以修饰属性、方法、代码块、内部类 3、修饰的资源在类加载时被执行或初始化 4、static成员可以通过类名直接调用static修饰属性——加static，修饰类变量———–不加static，修饰实例变量static修饰方法——加static，通过类名直接调用—不加static，通过对象调用若一个类中几乎都是静态方法，称之为工具类 编译—-javac 启动编译器——-Hello.java–&gt;Hello.class运行—java Hello 启动JVM进程，加载Hello.class，执行Hello.main方法static修饰代码块{}——类体、方法体、分支、循环、实例代码块、静态代码块 class Foo { 实例代码块 对象创建时执行（先于构造方法执行） }static { 静态代码块 类加载时执行，仅一次 } 创建对象时的顺序：静态代码块（仅一次）—&gt;实例代码块—-&gt;构造方法java提升系统性能——1、使用缓存 cache 2、使用单例静态代码块：适合写初始化系统环境的程序，如缓存加载 对多态定理3的补充：静态方法—–不能被覆盖，根本就没有多态 static应用：单例模式——保证一个类在系统中最多只会创建一个实例。好处：避免大量创建对象，减少系统垃圾，降低GC启动频率。由于GC消耗系统性能，从而提高java系统性能实现——-1、构造方法私有 2、提供静态方法来获取单例 3、提供静态属性来保存单例 final修饰变量——不加final，变量——–加final，常量，一经赋值，不可改变。 ——-要么在声明时初始化，要么在构造方法中初始化修饰符位置不分先后 接口也是一种引用类型，可以理解为一种特殊的抽象类 —-1、所有属性都是public static final —-2、所有方法都是 public abstract —-3、接口没有构造方法（抽象类有）interface IA { —-；—-；—-}类 implements 接口———接口 extends 接口1、1个类可实现一个接口2、1个类可实现多个接口，多个接口用,分隔 异常：1、java.lang.Throwable: throw new Exception()2、java.lang.Exception：可以捕获并处理3、java.lang.Error：一旦出现，是严重的底层错误，无法挽回异常分类：1、运行时异常： RuntimeException类及其子类（unchecked exception)，编译器不会检测2、非运行时异常：除RuntimeException系列外的Exception以及其他子类（checked exception)，编译器会检测处理异常：1、积极处理 try—-catch—finally: printStackTrace()打印异常栈轨迹，便于调试2、消极处理 throws Exception()throw—-抛出异常，，throws—-声明抛出异常类型 java更适合商业运算、服务器端编程、企业级应用重要API：许多类和接口1、java.awt.基础包2、javax.swing.扩展包，swing编程3、java.awt.event.*事件处理包 GUI编程步骤：1、选择容器吗，JFrame窗体2、设置布局管理器，FlowLayout、BorderLayout、GridLayout3、添加组件4、添加事件处理监听器有很多种，这里关注ActionListener接口，具备事件处理方法 public void actionPerformed(ActionEvent e)"},{"title":"Hello World","date":"2018-11-13T02:50:57.179Z","updated":"2018-11-13T02:50:57.179Z","comments":true,"path":"notebook/hello-world.html","permalink":"http://yoursite.com/notebook/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"notebook","date":"2018-11-18T02:04:21.000Z","updated":"2018-11-18T02:04:21.724Z","comments":true,"path":"notebook/index.html","permalink":"http://yoursite.com/notebook/index.html","excerpt":"","text":""},{"title":"seleniumum_自动化测试","date":"2018-11-12T11:00:19.000Z","updated":"2018-11-13T03:13:00.042Z","comments":true,"path":"notebook/seleniumum-自动化测试.html","permalink":"http://yoursite.com/notebook/seleniumum-自动化测试.html","excerpt":"","text":"robotframework——-关键字驱动、数据驱动jenkins——-不需要手动启动，测试可分布式运行到多个环境docker—–&gt;接口测试、单元测试还是不错的，selenium吗压力测试——-jmeter（新手入门）、locust（未来）app测试——appium性能测试 –唯一需要看书学习的 selenium 是一个web的自动化测试工具，不少学习功能自动化的同学开始首选selenium ，相因为它相比QTP有诸多有点： 免费，也不用再为破解QTP而大伤脑筋 小巧，对于不同的语言它只是一个包而已，而QTP需要下载安装1个多G 的程序。 这也是最重要的一点，不管你以前更熟悉C、 java、ruby、python、或都是C# ，你都可以通过selenium完成自动化测试，而QTP只支持VBS 支持多平台：windows、linux、MAC ，支持多浏览器：ie、ff、safari、opera、chrome 支持分布式测试用例的执行，可以把测试用例分布到不同的测试机器的执行，相当于分发机的功能。"},{"title":"selenium测试例子","date":"2018-11-12T10:56:00.000Z","updated":"2018-11-13T03:05:50.383Z","comments":true,"path":"notebook/selenium测试例子.html","permalink":"http://yoursite.com/notebook/selenium测试例子.html","excerpt":"","text":"———————————————————Firefox———————————————————-package day01; import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.firefox.FirefoxDriver; public class FirstTest { @Test public void firsttest() { WebDriver driver = new FirefoxDriver(); driver.manage().window().maximize(); driver.get(“http://www.baidu.com&quot;); WebElement webTxt = driver.findElement(By.id(“kw”)); webTxt.sendKeys(“selenium”); WebElement btn = driver.findElement(By.id(“su”)); btn.click(); driver.close(); } } ———————————————-chrome—————————————————————package day01; import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver; public class Chromefirst { @Test public void firsttest() { System.setProperty(&quot;webdriver.chrome.driver&quot;, &quot;D:\\\\Java_Workspace\\\\chromedriver.exe&quot;); WebDriver driver = new ChromeDriver(); driver.manage().window().maximize(); driver.get(&quot;http://www.baidu.com&quot;); WebElement webTxt = driver.findElement(By.id(&quot;kw&quot;)); webTxt.sendKeys(&quot;最新电影&quot;); WebElement btn = driver.findElement(By.id(&quot;su&quot;)); btn.click(); //driver.close(); //System.out.println(&quot;hello word&quot;); } } —————————————–chrome————————————————————package chrome; import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver; public class Enterprise { @Test public void LoginToDefaultPage() { System.setProperty(“webdriver.chrome.driver”, “D:\\Java_Workspace\\chromedriver.exe”); WebDriver driver = new ChromeDriver(); driver.manage().window().maximize(); driver.get(&quot;http://www.jiyuonline.com:8080/QuickJob/action/Common/index&quot;); //点击右上角的“企业登录”按钮 WebElement enterpriseLogin =driver.findElement(By.id(&quot;btn-clogin&quot;)); enterpriseLogin.click(); //填写“会员名” WebElement enterpriseName =driver.findElement(By.id(&quot;memname&quot;)); enterpriseName.sendKeys(&quot;内测单机构扩展公司&quot;); //填写“用户名” WebElement enterpriseUser =driver.findElement(By.id(&quot;username&quot;)); enterpriseUser.sendKeys(&quot;13146421665&quot;); //填写“密码” WebElement enterprisepwd =driver.findElement(By.id(&quot;password&quot;)); enterprisepwd.sendKeys(&quot;aaa111&quot;); //填写“验证码”---企业999999，学校9999 WebElement enterpriseCertificate =driver.findElement(By.id(&quot;authcode&quot;)); enterpriseCertificate.sendKeys(&quot;999999&quot;); //登录 WebElement enterpriseLgn = driver.findElement(By.name(&quot;submit&quot;)); enterpriseLgn.click(); //x掉第一次登录的下端欢迎 WebElement xwelcome = driver.findElement(By.className(&quot;delete&quot;)); xwelcome.click(); //driver.close(); System.out.println(&quot;hello word&quot;); } }"},{"title":"selenium测试学习笔记","date":"2018-11-12T10:57:02.000Z","updated":"2018-11-13T03:05:53.784Z","comments":true,"path":"notebook/selenium测试学习笔记.html","permalink":"http://yoursite.com/notebook/selenium测试学习笔记.html","excerpt":"","text":"1、搭建自动化测试框架：Junit、maven、SVN、Jenkins（svn提交后，自动检测，执行并生成报告） 2、定位：id、name、css、className、tagName、linkText、Xpath（‘&gt;’可以代替空格） 3、Ctrl + shift + O 补全import4、启动Tomcat： startup，看是否起来：netstat -an | findstr “8080” 起来：LISTEN5、Jenkins起来有欢迎界面：localhost：8080 6、selenium显示等待，WebdriverWait().unit()7、js弹出窗口（现在用的少）alert box —–accept方法 confirm box ——dismiss prompt box—— 8、input[name = middle] , csscelector frameset frame:nth-child(2) frame.switch9、@target-----@Before——-执行Test方法之前执行一次 @After—-执行Test方法之后执行一次10、@BeforeClass———–实例化整个类之前执行一次 @AfterClass——实例化整个类之后执行一次11、hamcrest:断言，功能强大。 推荐书：Junit in action——-8集完 1、@Test(expectie = ArithmeticException.class) public void f() { double a = 4/0} //测试通过2、Test(timeout = 5000) { try{ Thread.sleep(6000); }catch(interruptedException){} } //测试失败3、junit 进行性能测试要复杂一些。TestNG相对简单4、RunWith（Junit4.class —Parameterized.class）5、分组测试：Junit3过时 6、@RunWith(Suite.class)，只能修饰类7、@SuiteClasses用法： @RunWith(Suite.class—只有Runner的子类可放入)、@Suite.SuiteClasses(ATest.class, Btest.class) 8、@Category({接口.class，接口.class}),若只有一个，可省略{}9、@IncludeCategory( @RunWith(Categories.class) @SuiteClasses(ATest.class,BTest.class)10、断言：assertTrue()、assertEqual()"},{"title":"人工智能职业方向","date":"2018-11-12T11:02:47.000Z","updated":"2018-11-13T03:06:21.592Z","comments":true,"path":"notebook/人工智能职业方向.html","permalink":"http://yoursite.com/notebook/人工智能职业方向.html","excerpt":"","text":"人工智能职业方向学习路线建议 课程名称 难易程度理论基础 大数据的统计学基础 ★理论基础 大数据的矩阵计算基础 ★进阶工具课 R语言数据分析、展现与实例 ★进阶工具课 机器学习 ★★★进阶工具课 Python数据分析 ★进阶工具课 Python机器学习 ★★★进阶工具课 机器学习及其matlab实现—从基础到实践 ★★进阶工具课 GPU并行计算与CUDA编程 ★★进阶工具课 开源计算机视觉库OpenCV从入门到应用 ★★实战应用课 推荐系统 ★★实战应用课 Spark MLlib 机器学习算法与源码解析 ★★★实战应用课 深度学习框架Caffe学习与应用 ★★★实战应用课 自己动手实践神经网络 ★★实战应用课 计算机视觉算法详解与实战开发 ★★★实战应用课 Python自然语言处理 ★★★登峰造极高端课 人工智能前沿系列之生成式对抗网络 ★★★★登峰造极高端课 机器读心术之文本挖掘与自然语言处理 ★★★★登峰造极高端课 机器读心术之神经网络与深度学习 ★★★★"},{"title":"什么是TestNG","date":"2018-11-12T10:58:26.000Z","updated":"2018-11-13T03:05:57.943Z","comments":true,"path":"notebook/什么是TestNG.html","permalink":"http://yoursite.com/notebook/什么是TestNG.html","excerpt":"","text":"TestNG是一个功能强大的测试框架，是Junit的一个增强版本。NG 代表“下一代”。TestNG框架提供了以下功能和解答我们的问题：“为什么我们需要TestNG”？1、注释可以帮助我们来组织使测试更容易。2、灵活的测试配置。3、测试例可以更容易地进行分组4、可以使用TestNG实现测试并行5、支持数据驱动测试6、内置的报告"},{"title":"简单介绍","date":"2018-11-07T04:39:30.000Z","updated":"2018-11-13T03:05:42.392Z","comments":true,"path":"notebook/开始写博客的一个诱因.html","permalink":"http://yoursite.com/notebook/开始写博客的一个诱因.html","excerpt":"","text":"2015年就有人建议在GitHub创建一个自己的博客，用来记录自己的学习。当时搭建了一下，简单写了两篇。直到最近辞职找工作（2018.10.12日辞，现在是2018.11.12日），有面试官问到了有没有自己的博客之类的记录自己学习的网站。虽然有一些记录，但只能很抱歉的说没有。最近又重新拾起来，搭建一下，把以前的一些记录（一直在有道云笔记里的部分）也放上面吧。当然，后期还会不断添加自己的一些记录和状态。。。"},{"title":"春草葳蕤","date":"2018-11-12T10:49:30.000Z","updated":"2018-11-13T03:05:38.958Z","comments":true,"path":"notebook/春草葳蕤.html","permalink":"http://yoursite.com/notebook/春草葳蕤.html","excerpt":"","text":"文/春草葳蕤许是走的太急，许是没有去顾及太多，回头看时，日影已偏西，回顾流水，早已不是昨日，回顾花儿，也早早飘离了枝头。人世已非，昨日溜走了，白驹过隙，时光匆匆，太匆匆。往事，物事人非，思来想去，心底也一般的如此透凉。真可谓风絮飘残已化萍，泥莲刚倩藕丝萦；珍重别拈香一瓣，记前生。人到情多情转薄，而今真个不多情；又到断肠回首处，泪偷零。即然，真个不多情，又为何会断肠呢？即然，真个不多情，又为何要泪偷零？难道也是一颗七巧心，连流泪也这般的玲珑，连伤心也这般的婉约。想想还真得是人到情多情转薄，这样要好的多，好的多呢，又会有多好。说出这样一句话来，又多无奈，还是情非得已？思想初恋，情窦萦绕。那些时候，总是想与你相守，哪怕守成一株开放的蔷薇，哪怕守成一树的落叶，哪怕形容枯瘦，哪怕白发翁媪，都不怕，也不去多想，心里只有爱，只想与你守成地老天荒。还记得，那时的我，身体不好，瘦弱恹恹。好似哪里也去不了，可我总想去看海，总想去看红叶，却总没有成行。那是个雨天，春游未曾成行的我，很是伤心，一个人躲在屋子里很是难过，你从山上采回山花，你将一株株山花举在我眼前，沁人心脾，醉我肺腑，你说你为我采回来了山花烂漫，摘回来了花仙子相伴。想想，花开一季，草枯一秋，人生在世，也不过就那么短短的数都数的过来的几万个日子而已，还那么的不开心，还那么的思前想后，将个一往情肠柔的透，将个一颗七巧玲珑心儿煎熬成一杯水，一杯忘情水，不敢饮，不敢喝，一喝心就碎，一饮人就憔悴了。情耐得住多少岁月与沧桑，在浓烈的背后，烈焰之下，也许归与平平淡淡，才是最真切最可靠的。然而，若果遇上一位无情人，遇上一位冷血的人儿呢？又该怎么样呢？有这样的人，无论你为她做的再多再多，她也不会感动，无论你为她付出再多再多，她依然无动于衷。从不懂感恩，从不知回报，好似别人为他做的一切都是应该，好似别人就该对他要好，要付出似得。恋爱中的人，最是甜腻的时候，我爱你，说再多遍也不腻，我想你，听再多次，也不厌。而就有人，一遍也不说，一句也不吐露，一个电话也不主动打给对方，一个信息也不主动发出一个。这样的人你说她是在爱着你，恐怕说给鬼，连鬼也不会信吧，一个爱字，连说都懒怠说，要真的将爱去付诸行动，就更懒怠去爱了吧。那就算了吧，擦肩而过吧，再也无牵扯，再也无联系。谁也不欠谁的。爱，要以爱为主线条，不为别个，只为你心我心，你侬我侬，正如黛玉说我为的是我的心时，宝玉回答：我也为的是我的心，难道你就知你的心，不知我的心不成？你心我心，是一心，你爱我爱是一种爱，情发一处，心心念念也在一处。爱情，要以情为首要，无关物质，无关地位，真可谓，风声雨声，声声入耳都是情，大事小事，事事总关情。情，千丝万缕后，爱的还是那个人，爱，千转百回后，思念的依然是最初遇见的那身影，忘也忘不掉，离也离不开，就算说好，你向你的方向走，我延我的方向行，可最后还是要相遇，还是要有牵扯，有瓜葛。有缘，是躲也躲不开的，无缘，是遇也遇不到的。一个缘字，将人间之情爱用红线缠绕，难解难分。许多时候，可能太再乎，太爱对方，才会有了许许多多，说不清道也道不白的情景情结，读红楼，让我记住了求全之毁，不虞之隙，宝黛之情爱，纯然脱俗，令人扼腕。说到此处，就又要再次提起红楼，读红楼时，总也忘不掉黛玉问的那句：“宝玉，你为什么病了？”宝玉笑着答道：“我为林姑娘病了。”是啊，就这样简简单单的一句，又抵得过多少缠绵悱恻的情语呢，相思成疾，相爱成疾，我病是因你而起，我病要好，是要你来医治，那就是你的爱呀，除此再也无药可医得。读着，眼泪就会情不自禁掉下来，咂在了心坎儿上，这就是情，这就是生死让人相许的情爱呀。想起自己，想起你，你为我所做的一切一切，不是爱，又是什么呢？无论风无论雨的陪伴，无论病无论疾的照顾，一杯水可思其恩爱，一勺羮可念其情深。这么多年你与我相守，不离不弃，你我相识到牵手，风风雨雨，一路走来，几年如一日，从未更改，情爱与日递增，从未消减。回首往事，回放爱情，心中暖意洋洋。爱情，不是虚幻，不是纸上谈兵，是真真实实的生活。一日三餐，无论粗茶淡饭，有你最香；一席一枕，无论草屋陋室，相拥梦甜。爱到深处，你心我心是一心。爱到深处，你人我人是一人。爱你就是爱自己，疼你就是疼自己，你我只有相守在一起，才是最美最完整的人生。爱就是真真实实的生活，爱就是平平淡淡的日子，互敬互爱，互珍爱互疼惜。两个人在一起，没有高贵与贫贱，没有谁为谁应该不应该。付出是甘心情愿，得到要懂得感恩。珍惜生命，真爱生活；珍惜爱情，珍爱日子，人到情多，爱已入骨入髓，铭心刻骨。真真是，情到浓时，红笺为无字，情到深处，莫到不消魂。卷帘西风，黄花为谁瘦？情到深处，情语已凝噎。恰恰还是那句，人到多情，情转薄。"},{"title":"普通话考试辅导","date":"2018-11-12T10:50:19.000Z","updated":"2018-11-13T03:06:16.847Z","comments":true,"path":"notebook/普通话考试辅导.html","permalink":"http://yoursite.com/notebook/普通话考试辅导.html","excerpt":"","text":"100分，97-100一级甲等，92-96一级乙等，87-92二级甲等，60以下没有证书。一级甲等做为省级以上出镜播音员。一级乙等播音教学及文艺类主持及北京语文，二甲是国家规定语文老师，二乙80分，绝大多数老师。三甲公务员。丢了重考。国家立法考试。一、单音节100个，10分，3.5分钟。慢了扣0.5-1分。不考轻声儿化，要满响准二、要连读，考变调四、不要说重复（别人说过的，抄袭来背诵的）的，网上抄的扣六分，有重复的酌情扣分"},{"title":"测试_页面对象模式","date":"2018-11-12T10:59:09.000Z","updated":"2018-11-13T03:05:35.168Z","comments":true,"path":"notebook/测试-页面对象模式.html","permalink":"http://yoursite.com/notebook/测试-页面对象模式.html","excerpt":"","text":"页面对象模式（Page Object Pattern）： 登陆页面的元素的位置也相应改变，如果你的测试用例没有封装过页面和元素， 每个页面都是拿webdriver 直接写，页面元素定位也分布到测试用例中，这要维护起来要全部改掉测试用例。如果你封装了页面，封装了元素，再封装一个对应的登陆Action，你的每个测试用例是调用的login.action（）。这样，你只需要改变你对象库的内容就完美解决UI变化，而不必一个个修改测试用例。"},{"title":"炼数成金_黄志洪老师经典语录","date":"2018-11-12T11:00:19.000Z","updated":"2018-11-13T03:51:24.652Z","comments":true,"path":"notebook/炼数成金-黄志洪老师经典语录.html","permalink":"http://yoursite.com/notebook/炼数成金-黄志洪老师经典语录.html","excerpt":"","text":"反正以后大家看书的时候养成一种习惯，反正一堆参考书在这里，你可以翻完一本又一本。如果对这本书的答案还是不满意，你对这本书讲的这个知识的细节还不满意，可以继续翻下一本。如果还不满意，可以看看这本书的索引或者它在解说这段知识的时候提到的参考文献。再顺着参考文献追踪原始论文或者原始材料或者讲清这些知识点的一些综述性的文章或论文，你可以继续细看下去，这个知识就发散式的（黄老师的作用也是指一条路，把关键点敲一敲，有些细节可能无法顾及到，因为每个人都有自己想的问题。如果这个问题你没得到答案，可以通过细节继续往下推敲，通过这些顺藤摸瓜的方法再往下推敲）。 由于卷积神经网络已经用的很普遍了，很少会要求大家去从头写一个卷积神经网络。一般都不会有人这么去做，通常都是利用一个框架（caffe、TensorFlow等）去实现一个卷积神经网络。所以大家也不用很纠结这个事情，就是说我要把每一个细节、每一个梯度怎么算的都弄的很清楚。更重要的是，你怎么通过选择神经网络的工作原理以及你的经验去决定神经网络的结构（用哪些结构更容易得到更好的结果，我应该对哪些参数进行调优，比如我的结构是5x5、6x6啊，用多少个卷积层，多少个直采样层，为什么用这么多，为什么用7个而不是8个—你用更多的时间花在这上面更好）。关于这些如何学习，扔给这些框架就行了。DL09g–1分钟开始讲GPU—-必学OpenCV（预处理）、必学CUDA（速度）。可以做实验的GPU约1000元，新的就三四千元。DL09h，有讲blog中对论文的翻译（1分钟开始）:Deep learning 论文笔记之（四） CNN卷积神经网络推导和实现—Notes on Convolutional Neural Networks数据挖掘系列（10）–卷积神经网络算法的一个实现 1、Neural Network Design **书2、Neural Network and learning machines(很老了）3、Matlab43个案例分析，中文论坛4、人工神经网络理论、设计及应用（韩力群）—简明5、matlab神经网络原理与实例精解 书2：Neural Network and learning machines 这本书写的Hopfield还是很好的书5：实例精解：模拟退火算法讲的比韩力群还好403卫星课程《深度学习框架caffe学习与应用》第6课：受限波尔兹曼机简介—受限Boltzman机：马尔科夫链（数学是最能挣钱的）–&gt;导致Google诞生，Gibbs抽样 周志华，机器学习，核方法Halcon、OpenCV、Octavehttps://zhuanlan.zhihu.com/p/25138563《人工智能：一种现代的方法（第3版）》是最权威、最经典的人工智能教材，已被全世界100多个国家的1200多所大学用作教材。最新外文书https://www.packtpub.com/ 我参加7月算法的课，说实话讲得不痛不痒。ML/DL这种东西没有速成的首先英语很重要，高数基础，矩阵，概率论。。。ML:建议吴恩达视频，台湾林轩田——-DL:建议hinton视频，oxford视频——CNN：CS231n当然paper很有必要，看人家说的，不如看原作者的paper。—-最后就是实践（大多数都是python）"},{"title":"达内测试课目录","date":"2018-11-12T10:54:43.000Z","updated":"2018-11-13T03:05:46.600Z","comments":true,"path":"notebook/达内测试课目录.html","permalink":"http://yoursite.com/notebook/达内测试课目录.html","excerpt":"","text":"达内测试 视频一：共计83天1、软件测试基础——————————————- 21天 2、Java——————————————- 14天3、Database———————– 7天（sqlServer3天shi，orcale四天） 4、NETCTOSS———–2天5、QTP—————————– ———–11天6、whitebox_testing—–2天 7、QTP_Project——————- 4天8、linux基础————– 3天9、LoadRunner——————- ———–10天10、LR_Project——————- 5天11、综合串讲———— 2天12、做笔试题———— 2天 selenium课程：课程一—–13课课程二——6课课程三——8课课程四——-11课"},{"title":"面试指南","date":"2018-11-07T08:26:03.000Z","updated":"2018-11-13T03:06:08.327Z","comments":true,"path":"notebook/面试指南.html","permalink":"http://yoursite.com/notebook/面试指南.html","excerpt":"","text":"最后送福利：你面试10场，至少有7场，面试题来自：leetcode(username：lengkujiaai,password:abcd15063892554,email:—-)，lintcode，《剑指offer》（或者轻微改编）。如果没有，那也太不正常了。所以，去看什么书，刷什么题，你懂了吧？（这一条结论，可随便找面了10家公司的学长学姐求证。希望工作忙碌之余，答一下这个，能对各位有用）"},{"title":"about","date":"2010-11-28T04:18:43.000Z","updated":"2018-11-18T01:43:34.922Z","comments":true,"path":"notebook0/s20101128.html","permalink":"http://yoursite.com/notebook0/s20101128.html","excerpt":"","text":"人的认识在一定程度上影响着自身的命运。这种认识可以发生在很多种情况下。比如大学毕业，一个人所拥有的知识和能力是有限的。若甲公司聘用此人给工资为500元，乙公司给3500元。当一个人选择一个公司之后，他将无法比较自己以后在两公司哪个中会更有价值，因为事实只有一个。而他不知道的那个可能会为自身带来更大价值的公司，他也未必回去关注。青蛙可死于温水。若干年后，当时去甲公司的人经验知识增加，工资增至3000元。而在乙公司的人整日轻松自在，经验知识不但没增，以前所学到的知识也有所遗忘。此时，乙公司只能给他2500元。又过些年月，在甲公司的人工资增至8000元，而乙公司的那人降为1000元。甲公司的那人还有很多选择，而乙公司的人只有一个选择。而最初在甲公司工作的那个人可能还没有在乙公司工作的那个人条件优越。注：择业和创业也许是去乙公司和甲公司。有的公司签多少年合同，然后就送楼房，转户口等，也许这二者都可成为那一纸钞票。"},{"title":"tags","date":"2018-11-18T02:19:50.000Z","updated":"2018-11-18T02:21:53.970Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"杨晓冬xdyang.ustc@gmail.com","date":"2018-11-12T10:46:03.000Z","updated":"2018-11-13T02:53:06.170Z","comments":true,"path":"notebook/杨晓冬xdyang-ustc-gmail-com.html","permalink":"http://yoursite.com/notebook/杨晓冬xdyang-ustc-gmail-com.html","excerpt":"","text":"一、 绪论 为什么要写这篇文章图像处理与计算机视觉基础，经典以及最近发展 从2002年到现在，接触图像快十年了。虽然没有做出什么很出色的工作，不过在这个领域摸爬滚打了十年之后，发现自己对图像处理和计算机视觉的感情越来越深厚。下班之后看看相关的书籍和文献是一件很惬意的事情。平常的一大业余爱好就是收集一些相关的文章，尤其是经典的文章，到现在我的电脑里面已经有了几十G的文章。写这个文档的想法源于我前一段时间整理文献时的一个突发奇想，既然有这个多文献，何不整理出其中的经典，抓住重点来阅读，同时也可以共享给大家。于是当时即兴写了一个《图像处理与计算机视觉中的经典论文》。现在来看，那个文档写得很一般，所共享的论文也非常之有限。就算如此，还是得到了一些网友的夸奖，心里感激不尽。因此，一直想下定决心把这个工作给完善，力求做到尽量全面。 本文是对现有的图像处理和计算机视觉的经典书籍（后面会有推荐）的一个补充。一般的图像处理书籍都是介绍性的介绍某个方法，在每个领域内都会引用几十上百篇参考文献。有时候想深入研究这个领域的时候却发现文献太多，不知如何选择。但实际上在每个领域都有那么三五篇抑或更多是非读不可的经典文献。这些文献除了提出了很经典的算法，同时他们的Introduction和Related work也是对所在的领域很好的总结。读通了这几篇文献也就等于深入了解了这个领域，比单纯的看书收获要多很多。写本文的目的就是想把自己所了解到的各个领域的经典文章整理出来,不用迷失在参考文献的汪洋大海里。 二、 图像处理与计算机视觉相关的书籍 数学 我们所说的图像处理实际上就是数字图像处理，是把真实世界中的连续三维随机信号投影到传感器的二维平面上，采样并量化后得到二维矩阵。数字图像处理就是二维矩阵的处理，而从二维图像中恢复出三维场景就是计算机视觉的主要任务之一。这里面就涉及到了图像处理所涉及到的三个重要属性：连续性，二维矩阵，随机性。所对应的数学知识是高等数学（微积分），线性代数（矩阵论），概率论和随机过程。这三门课也是考研数学的三个组成部分，构成了图像处理和计算机视觉最基础的数学基础。如果想要更进一步，就要到网上搜搜林达华推荐的数学书目了。 信号处理 图像处理其实就是二维和三维信号处理，而处理的信号又有一定的随机性，因此经典信号处理和随机信号处理都是图像处理和计算机视觉中必备的理论基础。2.1经典信号处理信号与系统(第2版) Alan V.Oppenheim等著 刘树棠译离散时间信号处理(第2版) A.V.奥本海姆等著 刘树棠译数字信号处理:理论算法与实现 胡广书 (编者)2.2随机信号处理现代信号处理 张贤达著统计信号处理基础:估计与检测理论 Steven M.Kay等著 罗鹏飞等译自适应滤波器原理(第4版) Simon Haykin著 郑宝玉等译2.3 小波变换信号处理的小波导引:稀疏方法(原书第3版) tephane Malla著, 戴道清等译2.4 信息论信息论基础(原书第2版) Thomas M.Cover等著 阮吉寿等译 模式识别Pattern Recognition and Machine Learning Bishop, Christopher M. Springer模式识别(英文版)(第4版) 西奥多里德斯著Pattern Classification (2nd Edition) Richard O. Duda等著Statistical Pattern Recognition, 3rd Edition Andrew R. Webb等著模式识别(第3版) 张学工著 图像处理与计算机视觉的书籍推荐1、图像处理，分析与机器视觉 第三版 Sonka等著 艾海舟等译———–Image Processing, Analysis and Machine Vision———-(附：这本书是图像处理与计算机视觉里面比较全的一本书了，几乎涵盖了图像视觉领域的各个方面。)2、数字图像处理 第四版 冈萨雷斯等著———-Digital Image Processing 4th———-(附：数字图像处理永远的经典，现在已经出到了第三版，相当给力。我的导师曾经说过，这本书写的很优美，对写英文论文也很有帮助，建议购买英文版的。 计算机视觉：1、Computer Vision: Theory and Algorithm———(附：微软的Szeliski写的一本最新的计算机视觉著作。内容非常丰富，尤其包括了作者的研究兴趣，比如一般的书里面都没有的Image Stitching和 Image Matting等。这也从另一个侧面说明这本书的通用性不如Sonka的那本。不过作者开放了这本书的电子版，可以有选择性的阅读。—Richard Szeliski著2、Computer Vision: A Modern Approach 2nd——–MIT的经典教材。虽然已经过去十年了，还是值得一读。期待第二版—DA Forsyth等著3、Machine vision: theory, algorithms, practicalities 第三版 Davies著——-(附：为数不多的英国人写的书，偏向于工业应用。)4、数字图像处理 第四版 Pratt著———Digital Image Processing—–(附：写作风格独树一帜，也是图像处理领域很不错的一本书。网上也可以找到非常清晰的电子版。) 小结罗嗦了这么多，实际上就是几个建议：（1）基础书千万不可以扔，也不能低价处理给同学或者师弟师妹。不然到时候还得一本本从书店再买回来的。钱是一方面的问题，对着全新的书看完全没有看自己当年上过的课本有感觉。（2）遇到有相关的课，果断选修或者蹭之，比如随机过程，小波分析，模式识别，机器学习，数据挖掘，现代信号处理甚至泛函。多一些理论积累对将来科研和工作都有好处。（3）资金允许的话可以多囤一些经典的书，有的时候从牙缝里面省一点都可以买一本好书。不过千万不要像我一样只囤不看。 图像处理和计算机视觉的分类按照当前流行的分类方法，可以分为以下三部分： A.图像处理：对输入的图像做某种变换，输出仍然是图像，基本不涉及或者很少涉及图像内容的分析。比较典型的有图像变换，图像增强，图像去噪，图像压缩，图像恢复，二值图像处理等等。基于阈值的图像分割也属于图像处理的范畴。一般处理的是单幅图像。 B.图像分析：对图像的内容进行分析，提取有意义的特征，以便于后续的处理。处理的仍然是单幅图像。 C.计算机视觉：对图像分析得到的特征进行分析，提取场景的语义表示，让计算机具有人眼和人脑的能力。这时处理的是多幅图像或者序列图像，当然也包括部分单幅图像。 关于图像处理，图像分析和计算机视觉的划分并没有一个很统一的标准。一般的来说，图像处理的书籍总会或多或少的介绍一些图像分析和计算机视觉的知识，比如冈萨雷斯的数字图像处理。而计算机视觉的书籍基本上都会包括图像处理和图像分析，只是不会介绍的太详细。其实图像处理，图像分析和计算机视觉都可以纳入到计算机视觉的范畴：图像处理-&gt;低层视觉（low level vision），图像分析-&gt;中间层视觉（middle level vision），计算机视觉-&gt;高层视觉（high level vision）。这是一般的计算机视觉或者机器视觉的划分方法。在本文中，仍然按照传统的方法把这个领域划分为图像处理，图像分析和计算机视觉。 图像处理和计算机视觉开源库以及编程语言选择目前在图像处理中有两种最重要的语言：c/c++和matlab。它们各有优点：c/c++比较适合大型的工程，效率较高，而且容易转成硬件语言，是工业界的默认语言之一。而matlab实现起来比较方便，适用于算法的快速验证，而且matlab有成熟的工具箱可以使用，比如图像处理工具箱，信号处理工具箱。它们有一个共同的特点：开源的资源非常多。在学术界matlab使用的非常多，很多作者给出的源代码都是matlab版本。最近由于OpenCV的兴起和不断完善，c/c++在图像处理中的作用越来越大。总的来说，c/c++和matlab都必须掌握，最好是精通，当然侧重在c/c++上对找工作会有很大帮助。 计算机视觉/图像算法/模式识别 工程师们使用的主流编程语言 1) 重中之重：编程语言之C/C++公司面试除了考查应聘者的图像处理基础知识、思维逻辑和个人品性之外，在个人能力之中最重要的一条就是C/C++ 的功底，很多学生朋友们在学校求学阶段并不重视C/C++的学习，导致找工作时处处碰壁(不过对于来参加面试的朋友，如果有较强的逻辑思维或图像理论功底，即使C/C++ 功底弱些，企业还是会偏爱的，毕竟C/C++ 只是一个工具，只要给些时间去钻研还是可以调高的，但是逻辑思维能力和图像理论功底却不是短时期就能提高的。不过一般逻辑思维和图像理论比较强的人，其C/C 水平也是不错的)。 为啥要这么重视C/C++ 呢?答案很简单，与绝大多数其它开发语言相比：C/C++ 的应用领域无法被超越、程序运行效率无法匹敌(当然汇编语言除外)，是使用人数最多、跨平台最广的语言工具(适用于windows/linux/dsp/arm/单片机，当然还有其它一些平台)。简单的说，对于多数应用，其它语言能做的事情C/C++ 几乎都能做，其它语言不能做的事情C/C++ 也可以做。 2) 辅助工具之：MATLAB百度百科中是这么说的：“MATLAB是美国MathWorks公司出品的商业数学软件，用于算法开发、数据可视化、数据分析以及数值计算的高级技术计算语言和交互式环境，主要包括MATLAB和Simulink两大部分。” MATLAB本身是一个不错的仿真、建模工具，但不适用于应用级项目的开发，原因很简单：效率与C/C++ 无法匹敌、不夸平台。(虽然后来出来了codegen可以将MATLAB部分代码转换为C++，但自动生成的还是无法与我们自己写的并优化的C++代码相比;还有MATLAB 的mex接口能够将C++与MABLAB接口对接，既然使用了MATLAB编程，那在应用级的领域还是无法与纯C++相比) 简短说说多年前做学生时的部分学习经历：记得多年前上大学阶段大嘴起初只跟着学校的课程学习了MATLAB的图像处理相关模块(后来才学的C/C++ ),一开始觉得很兴奋，因为只需要编写很少量的代码就可以实现很强大的效果。后来大嘴进一家计算机视觉类的公司实习，发现公司主要用的是C/C++ ,因为MATLAB效率比起C/C++ 相差几倍、十几倍、甚至几十倍，而且要命的是不跨平台，只能用于windows上，后来逼的自己去学了C/C++ ,也正因如此那以后一直到现在特别是当初找工作的时候让我受益匪浅。 对于企业，特别是私企，公司除非给你充足的时间先使用MATLAB做完算法功能，然后再用C/C++ 慢慢改写，而且了解的朋友们都知道，MATLAB的精度与封装的函数标准与C/C++ 有很多不一样，改写起来相对麻烦一些，这样太慢太慢太慢了，项目不等人啊。试问人家成手能够用短时间写出C/C++ 做图像算法并马上可以投入应用，而自己却在那边慢慢磨MATLAB,然后再费老大劲改成纯C(比如需要警觉MATLAB与C++精度不一样的问题、图像处理基础函数标准不一样的问题),那么老板会比较喜欢谁呢？ 如果大家从最初就使用C/C++ ，虽然一开始不数量会写的很慢，但是随着知识量和自各种库（比如图像处理库）的积累，那么总有一天开发速度会快起来的，量的积累，质的飞跃。 说了不少，本人并不否认MATLAB，MATLAB做为建模、仿真以及一些验证的工作(比如图形分析和处理、图表显示、图像仿真、语音仿真等)还是不错的，这方面大嘴绝对力挺MATLAB,目前本人也还在使用中。 一句话：对于多数普通人来讲，如果你的目标是想进企业做为一个实力派工程师，那么大嘴建议您以C/C++ 为主、MATLAB为辅助工具做开发。 3) 辅助工具之：OPENCV随着opencv的问世，图像算法/计算机视觉/模式识别行业的门槛儿变低了，原因有以下几点：(1)opencv是以C/C ++为基础开发出来的，适用性强，windows下适用opencv开发的图像算法应用效率足够快 (2)封装了很多基础图像处理函数和视觉算法，可谓“拿来即可用”。 (3)与嵌入式接口的统一趋势，如前几年大牛们人物搞出来的EMCV(基于C/C++ )，其基础架构和接口与opencv基本一致，但个人认为EMCV很多函数功能尚不完善，目前暂时无法与opencv相比。今后很多人在windows下基于opencv开发后，可以较为轻松的移植到DSP上，这种开发模式会是一种趋势。 说了opencv几条优点,但本人并不赞同只依赖opencv做开发，无论是图像算法行业还是其它很多行业，最重要的不是用什么工具，而是自己的基础知识和逻辑思维方式，opencv封装了很多基础函数，如果朋友们未搞懂其基础原理便加以使用，这种方式并不利于锻炼自己，抽空自己实现一下opencv和MATLAB的封装好的那些基础函数吧，久而久之，你会发现自己站的高度会越来越高的。说到这里，改写一下评述MATLAB时的一句话：”对于多数普通人来讲，如果你的目标是想进企业做为一个实力派工程师，那么大嘴建议您以C/C ++为主、OPENCV和MATLAB为辅助工具做开发。” 4) 简单说说其它语言其它开发语言，比如：C#,JAVA等(还有很多很多语言，不一一举例了)都是不错的开发语言，各自有各自的主应用领域和优势，也有很多很多牛人在使用，不过做图像处理嘛，如果不偏向企业级应用(如嵌入式中)，虽然也可以用，但是了解的朋友做出来的算法效率实在不敢恭维…,又无法夸平台，在一些不要求效率的场合还是可以用的，所以请学生朋友们慎重选择开发语言，因为这与自己以后的择业以及职位方向有很大关系。 本文的特点和结构，以及适合的对象 在本文面向的对象是即将进入或者刚刚进入图像处理和计算机视觉领域的童鞋，可以在阅读书籍的同时参阅这些文献，能对书中提到的算法有比较深刻的理解。由于本文涉及到的范围比较广，如果能对计算机视觉的资深从业者也有一定的帮助，我将倍感欣慰。为了不至太误人子弟，每一篇文章都或多或少的看了一下，最不济也看了摘要(这句话实在整理之前写的，实际上由于精力有限，好多文献都只是大概扫了一眼，然后看了看google的引用数，一般在1000以上就放上来了，把这些文章细细品味一遍也是我近一两年之内的目标)。在成文的过程中，我本人也受益匪浅，希望能对大家也有所帮助。 由于个人精力和视野的关系，有一些我未涉足过的领域不敢斗胆推荐，只是列出了一些引用率比较高的文章，比如摄像机标定和立体视觉。不过将来，由于工作或者其他原因，这些领域也会接触到，我会逐步增减这些领域的文章。尽管如此，仍然会有疏漏，忘见谅。同时文章的挑选也夹带了一些个人的喜好，比如我个人比较喜欢low level方向的，尤其是IJCV和PAMI上面的文章，因此这方面也稍微多点，希望不要引起您的反感。如果有什么意见或者建议，欢迎mail我。文章和资源我都会在我的csdn blog和sina ishare同步更新。 本文的安排如下。第一部分是绪论。第二部分是图像处理中所需要用到的理论基础，主要是这个领域所涉及到的一些比较好的参考书籍。第三部分是计算机视觉中所涉及到的信号处理和模式识别文章。由于图像处理与图像分析太难区分了，第四部分集中讨论了它们。第五部分是计算机视觉部分。最后是小结。"},{"title":"文盲----一堂近代史课的反思（于烟台南山学院)","date":"2010-11-03T04:40:09.000Z","updated":"2018-11-18T02:38:29.765Z","comments":true,"path":"notebook0/index.html","permalink":"http://yoursite.com/notebook0/index.html","excerpt":"","text":"每次上这种课（当然也包括其他课）都会有人来迟，且不止一两个。这位历史老师忍耐不住，发表了一些感慨。他说历史是很重要的，但又像哲学一样的特殊。它达到和整个国家以及每个人相关，小到你可以忽略它，就看你怎么用了。很多大型企业家对历史非常熟悉，以至于让一些历史老师自叹不如。接着正好讲义和团。他说义和团并没有什么严密的组织，也没有什么纲领，只凭“扶清灭洋”的口号出现的。他说义和团中多数人都是文盲，百分之九十以上是半文盲。就连洪秀全也只读了十二年书，仅多相当于今天高中生的水平。我们学生至少也是大本啊！很多专家对他们的口号从各种角度解说。老师说对一个文盲来说，他哪儿知道那么多。一个文盲，你让他分析那个分析这个，他能做到吗？一个只会种地的农民哪儿会知道这些。他们看到“灭洋”就加入了，这是他们对洋人恨到了极点。“扶清”就是次要的，清好了就扶，坏了就不扶。口号就这么简单。以上这些就是昨天老师讲的留在我大脑中有所悟的东西。当老师讲到“文盲”时，有些学生鄙视般的笑了，好像他们比文盲高级很多。说农民是文盲，半文盲，有些学生竟然笑了。所谓的半文盲不就是有部分字不认识吗，又有几位学生认识全部汉字并明晰其中的意思呢。你所知道的也只是有人告诉你了，然后自豪了，然后看不起了那些不知道的人，接着自认为自己变的高级了。就好像画了一个圈，自己站在高级的圈内，比别个高了一等。但你是否想过，画圈的标准是什么，你具备吗？这标准可以作为标准吗？如果你承认了这不合理的标准，接着就会有人用这个标准继续画圈，以至于你在他的圈外，他比你高很多级。因为老师还强调了我们是大本，我认为这里所谓的标准就是那一张纸质的学历，外面包一层塑料。再高级一点，这张纸的质量比平常草纸的质量高一点。这标准的质量先不说，就算你真的别人高了一等，你就会有资格去笑吗？其中有文盲父母的也不少吧！我不认为学历高，多读几年书就见得会高明。有的人一个字不认识，但在我的判断下，很多学士，硕士等顶多在文字上有点糊弄的本领，拿到生活中现实的有些问题上，不见得有那些人的认识透彻。我认为这里并没有夸张，有些人不服可能是我撕破了他们自认为高贵无比的假面具。没有学历可以去考一个，但没有判断力可以靠颁发一个学历弥补吗?不要认为我是以个人情感的密疏影响了对事物的判断，我没有那么无耻，况且我也接触了很多无知的老师和学生。什么叫文盲，我认为判断文盲的标准不是学历，不是认识汉字的数量。而是个人的判断力所触及的问题的深度和广度。达不到一定程度就叫文盲，即便你是教授。这种文盲才应该是被笑的对象，当然在内心的最深处，我也不会去笑这些人。当我听到一些学生的这种笑声时，我也笑了，但绝对不是同一种笑。从我听到这笑到我发出笑也许只有零点几秒的时间，所以说有很多时候我的思想是来不及记录的，有时会想也做不到。 一张钞票 2010.11.28人的认识在一定程度上影响着自身的命运。这种认识可以发生在很多种情况下。比如大学毕业，一个人所拥有的知识和能力是有限的。若甲公司聘用此人给工资为500元，乙公司给3500元。当一个人选择一个公司之后，他将无法比较自己以后在两公司哪个中会更有价值，因为事实只有一个。而他不知道的那个可能会为自身带来更大价值的公司，他也未必回去关注。青蛙可死于温水。若干年后，当时去甲公司的人经验知识增加，工资增至3000元。而在乙公司的人整日轻松自在，经验知识不但没增，以前所学到的知识也有所遗忘。此时，乙公司只能给他2500元。又过些年月，在甲公司的人工资增至8000元，而乙公司的那人降为1000元。甲公司的那人还有很多选择，而乙公司的人只有一个选择。而最初在甲公司工作的那个人可能还没有在乙公司工作的那个人条件优越。注：择业和创业也许是去乙公司和甲公司。有的公司签多少年合同，然后就送楼房，转户口等，也许这二者都可成为那一纸钞票。 溜个弯儿我生于1988年，大约几斤重的一个小男孩。起初我的身体状况并不好，在姥姥家长大。刚来的人间时，我是无知的。在好奇心的吸引下，我学会了说话。在站立带来恐惧下，我学会了行走。至今我仍然相信每个人曾经掌握这些技能的过程是痛苦的，而且是真真实实存在的。八岁那年，我开始上学。被妈妈叫醒时眼睛还有点干涩，急忙穿上衣服奔向学校。冬天很冷，我经历了。得不到奖状被家人批评，我痛苦了。在家中那些无聊的无人无物陪伴的日子我过了。被非人性老师的打骂，我经过。上初中，学校离家六里，住校使我想家。所以我哭泣，所以夜晚我一个人回家。胆小的我起初对黑暗的恐惧我体验足了。冬天很冷，还是我一个人这样走着。有几天接连有雾，我在沥青和石子铺成的路上骑自行车。大约只能看到二三米远，以防掉进路边沟里，我就沿着路中间的黄线走。还遇到过车胎没气和掉链子的情况。还有一次突然看到一个人，急转弯摔破了肉皮。还有一次去上学，天下的是雨，还刮着大风，骑车子和步行差不多，很冷，想哭，但没有。考上重点高中，还是正榜，很高兴。很想家，也掉过泪。每次回到离别约一月的家很高兴，离开时很痛苦，这痛苦一直延续到坐上公交车。高中同样没有时间自由，还早起。高考没考上所谓的本科，我复读了一年。第二年上了现在的三本。对于这次成绩很失望，有种想哭的感觉。真正体会到了活着有时要比死了痛苦。想复读，但没有。既然是男女生同一教室学习，谁喜欢谁是难免的。小学心中就有喜欢的人，但不敢去说话，更谈不上交往。当时有一些阻碍方面的考虑。初中也有，后来不在一个班时很想见到，但还是一直学习。初二时，另一女生长的还行，但我只是稍微和她说一些话（因为我很少和女生说话），她就表现出热情，对于热情的持续我感到厌恶，就不与之说话了。如果说真正的爱，应该是在高中。对于这个人的出现，太好了。假如把我的过往比作天空，那么她就是太阳。是这颗太阳隐去了曾经最有意义的事情。其中的有些场景，当时意识到上辈子经历过。高考倒计时天数写在黑板上，看到减少天数的我伤感。最终我才说了“我喜欢你”，但没有做其他事情。我认为她是美，善良，智慧的结合。现在是大学，同班里当然也有一位心动的人。但最不能容忍的是这位和多数男生说话嬉笑。善良不敢评论这位，因为了解少。所以仅仅心动而已。现在可以不必早起，有了不少时间自由。纵看一下我经历的痛苦，是越来越少了。而我出身贫穷，我曾经到现在一直不能去与女生交往。（确切点是漂亮的哦）还有对未来的考虑。我不能去伤害谁，所以我一直不能有行动。吃水不忘挖井人。我这些美好的记忆都是因为我努力学习得来的，要得到更多，就要继续一如既往的学习。我感觉如果说X轴是受苦努力，Y轴是幸福，那么他们之间的关系类似指数函数2的N次方。今天的努力远远胜于以往的努力。没人管制了，就不要考研了吗，不。给自己一个承诺，考完研，若考好考上的话，就读完。然后再去社会中体验，没有上学，就没有这些。若不考，去社会中就算挣到了很多钱，然后不也是没事情做吗？多读几年，最多钱财来的晚一些，就当是我在人生的路上多溜了一个弯。 2017年7月9日 配眼镜 晴朗验光结果是775度，在必要商城上配了个675度的，钛合金框架，有点夹耳朵。验光25元，忘了拿医保卡，没用过，如果有医保卡1元就可以。来回路费16元。眼镜300元。共计340元。老眼镜是2006年配的，10多年了。沧桑岁月啊。 2017年10月11日 购书普通话水平测试专用教材： 24.8元后续事项：报名费50，来回路费24，证书邮寄12共计：110.8元总结一：有时候100块钱花出去了，真的没有带来多大的意义，但这个110真的值。证书就算不重要，至少练习了一些字词的读音，至少知道了很多考普通话的人经历了什么，也知道了自己在这里处于怎样一种水平，还知道了普通话证书的用处。就这几个问题都是100块钱买不了的，当然，很多事情都是这样，不是花钱就算了，还要用时间和精力去换。没有参与的时候还瞧不上，真正经历了，才知道并不简单。总结二：这是在工作中顺便解决的，总的费用不多，时间费用也不多。报名用了不到十分钟，培训不到两小时，考试不到半小时，至于领证，可以计为一分钟，共计不足三小时。如果说路上时间不算吗，我本来就是以玩的心态，并且真的是玩。反过来，如果是专门去做这件事，并且是没工作的时候去做这件事。买书到手上2天，等考试时机一个月不等，报名一天，到考试半个月，考试一天，到领证约40天。少说也要三个月，又要耽误到来的机会。并且还会处于一种紧张焦急的心态。启发：生活中的很多事情都是这样的，安逸时多活动，就会少一些困境。 公司外景 2018年3月23日 普通话报名 周五普通话测试考试的教材已经买了好几个月，中间有几次想考想学，一直没有具体行动。今天就在上班时用空闲时间报名了，考试地点在北京市东城区，现场缴纳报名费。报名的照片是自己用手机拍照后在电脑上面简单处理后提交的。并不是一定要考，只是闲得慌，找点事情做。再说，也简单看过高中数学教师资格证考试的真题，并不难。还有就是，平时找点正事做，等用的时候也方便。平时不做，等用时就要耽误好长时间，还会给自己增加压力。这样轻轻松松就解决了。 2018年3月31日 周六 晴天 普通话交费早起，从八仙庄南大街坐860公交至地铁5号线的北端终点站天通苑北，再到北新桥，步行10分钟左右到达地点。早上没有吃饭，还有点饿了。以为路上要用很长时间，谁知9点多一点就到了。按着手机定位走，走到一个旁边的有厕所的地方了。又走回来。在门卫那里先问一下，那人很不礼貌，“指示牌上不是写着的吗”，对那人很反感。走到二楼报名门口，发现忘了带身份证，心中猛地一凉。退了出来，有考虑一下，进去，报名人员说没身份证也没事，主要是怕填错信息。支付宝交50元，领准考证。走出报名的院子，看到旁边有卖老北京酸奶的，瓷瓶纸盖的那种。好久没有喝过了。刚开始知道并品尝这种味道还是大约在2010年，在石景山区六合园开小卖部。那时候卖2元，还有人说贵，自己不知道价格，还感觉坑了别人，但进价就一块五以上了。没办法，只能那么多。那时候真的很窘迫，很穷。此时看到这酸奶，内心还是有些触动的。问老板，说四块五一瓶，我知道没有涨价这么多，说了句之前不是这个价啊。老板说你带走还是在这里喝，带走四块五，在这里喝3块。我要了两瓶。并不是要讲价，我也知道他们的不容易，只是想花钱不能大手大脚。又走了几步，觉得此时回去还早，应该在城内转转，反正好久没有进来了。还有一个原因是下午一点半有个普通话测试的培训，免费的，不听也行，听了更好。还是高德地图，好像附近有个和硕公主府，10分钟走到，门卫不让进。询问得，什刹海不远，就10多分钟走过去了。有好多游人。转了一圈又一圈，一个人很累，很想有个陪伴。十二点多一点，开始向报名点走去，脚已经感觉特别累，不想走路了。看有卖东西的，想买点，闲贵，没买，可能是还没有从贫穷的习惯中摆脱出来。一个五六十的男老师培训，时间到三点十五。感觉他发音也就那样，竟然是一级甲等。培训完，直接回。回来买了点吃的，喝点酒，睡觉。算算今天的支出：公交一块，地铁五块，报名费五十，酸奶六块，地铁五块，公交一块，吃的三十。共计小一百。感觉还是挺有意义的。还是有钱好，即做了事情，又活的舒服。没钱就坏了，想进步都不行。结论：这钱可不能乱花，一定要用到正确的地方。 图：培训教室 2018年4月14日 周六 晴天 普通话考试早上醒的早，打开电脑和美国大叔学口语。五点多又睡了一会，也没睡好，怕晚了。六点半，吃饭，860公交，地铁，不到九点就到了考试地点。看到别人在签到，我去签。那几张名单上没有名字，去另一张找，遇到一个二逼该死的老太太。说话想吃屎，但又因为我是来考试的，吵架不好，所以就没有闹。先讲考试注意事项。一会被带到地点，抽题，3号题。反正都是单字读音，词语读音，短文读音，命题说话（二选一，选了“谈谈科技进步与社会生活”）。准备十分钟，进入单间考试，很快，也就十多分钟就考完。 到门卫办理邮寄普通话证书，北京市内12元，准考证交了上去。刚九点，回去还早。高德地图，发现附近有地坛公园。走到半路，发现忘了把准考证号记下来方便查询成绩。又一想，算了，反正会过的。地坛门票2元，感觉还是有钱好，可以过的很舒服。高中那会儿，哪里舍得，哪怕是一块钱。十一点多，启程回。十一块钱凉菜，十块钱的饼，喝点小酒，睡觉。醒了，学习英语。一天过。算算花费：早饭四块五，来回路费十二，中午饭菜十四，酒是以前买的不算。共计三十块五毛。感觉不多，是因为工作了，有收入。寄人篱下的日子一去不复返了。有些人年轻时不努力，长大了一味地问哪里挣钱，你就是一个堕落的底层人。 准备教室 2018年5月5日 对购买学习视频的总结 阴天今天一天没有出门，喝酒、学习、睡觉。最近一直在学英语口语，还顺带学点深度学习的内容。shane的口语讲的特别好，相见恨晚。我的英语一直没学好，很大程度是外界对我的信息传达不到位。比如2001年才接触英语，且刚开始缺少答疑解惑，后面就一直跟不上了。现在还不晚，我相信英语会慢慢提高的，其他方面也会提高的，因为我购买了视频。现在想想自己真蠢，为什么到最近才想起来要买视频，为什么到最近才舍得购买。2017.10.11—–2元—-新概念英语（包括走遍美国、谢孟媛等）—-太值了2017年10月23日——–1.5元——180部英文动画片——也值，只看了几个2017.11.24—-6.99元—–软件测试自动化selenium等——-看了一部分，很值2017年11月28日———-16.8元——Python机器学习深度学习神经网络—–看了不少，肯定是有收获的———触发购买GPU课和OpenCV课2018年3月10日——5元——区块链——花了一段时间了解2018年3月22日——-5元—–GPU并行处理、cuda学习——–很不错的资料2018年3月25日——-1.6元—-OpenCV——-在学习，，还买了另外一个人的但由于发货慢退了，那人以为我是另外一个给他找事的人，骂了几下，发现后给我主动道歉并赠送大量学习课程，包括深度学习、OpenCV等 2018.4.19——-15元————多套英语讲课，特别是shane—–特别值2016年4月23日，自然语言处理、scala、代码整洁之道、spark大数据，计88元，不太值2017年3月15日，周志华机器学习，27元2017年3月27，先知，27.6元，没怎么看2017年5月8日，scala，3rd，53元，两本，花了好几个月阅读2017年5月8日，scala in depth ，scala in action，计40元，读的不多2017年6月16日，国学经典，28元，偶尔看看2017年6月19日，练字帖，34.8元，练了几下2017年6月20日，笔墨，88元2017年7月21日，deep learning 英文版，45元，读了上册一部分，搞不懂，搁置2017年8月29，书架，21.8元2017年8月30日，统计学习，17元，看的半懂不懂2017年9月14日，小音响，39.9元，学习生活两用2017年10月11日，普通话水平书，24.8元2017年11月10日，scala、akka共3本，108元2017年12月27日，草稿本，17.8元2018年1月7日，韩立群神经网络，14元，这本书很好2018年1月9日，matlab43个案例，35.5元，因为视频中老师推荐2018年1月18日，matlab计算机视觉，34.6元，看了一点2018年1月24日，惠普23.8英寸显示器，888元统计：专业学习书—–462.1元,纸笔及课外阅读考试书等学习相关—-282.7元，显示器888元。购买视频共计53.89元，这收获太多了，这是5000元5万元也难以买到的知识。50元能做什么，光买书都花了很多钱了。简直是打开了一扇宝藏的大门。 2018年6月7日 高考第一天 北京 晴 写作时间-下午2点，写作地点-北京市朝阳区天畅园1号楼的工位全国二卷高考作文题：你每个月底在蔚蓝色的天空中有6%的概率看到彩虹，但是北欧人每天都能看到彩虹，非洲人永远看不到彩虹，请根据上述情况写一段文章，文体不限(诗歌除外)，字数800字。 作文作者：史海龙，邮箱lengkujiaai@126.com注：参加完高考已十年，也已十年没写高考作文。看到题目，感慨很多，但800字的要求也限制了表达。题目：触摸天空的那道彩虹首先说题目是一个假设，是对生活现象的抽象。其主题思想凸显了一种不公平，但情况对自己既不是最有利的也不是最不利的。每个人面对这种现象时都会有不同的心态和反应，但抱怨是没任何效果的，我们唯一能做的是努力学习。还记得周星驰演的电影《苏乞儿》，在夺取武状元的比武场上面，对手已经在各方面做了手脚。很多人在层层筛选中被淘汰，而坚持到最后的苏乞儿也不得不面对自己武器被动手脚，不得不面对对方的暗箭毒针和裁判的偏袒。当然，好就好在苏乞儿武艺高强，将对方的毒针挡了回去并毒死了坏蛋。这只是电影中的情节，殊不知有时候生活中的情节要比电影情节更复杂更隐蔽更精彩。一个人从出生起就进入了一场人生的比赛，其中高考就是一个重要的节点。我们常听到一句话“不要让孩子输在起跑线上”。假如出生的孩子都站在起跑线上，那么这条线一定弯弯曲曲。父母文化低且家庭贫穷的农村娃就好比题目中的“非洲人”，而父母文化高有地位的北京娃就好比“欧洲人”，而更多的你我还是普通人。在努力的道路上，家庭贫困的缺少更多学习上的指导，有时还要拿出时间来干家务。上课老师的水平也很重要，如我高一的化学老师发音不准，很多学生已经做出来的题目都不会讲，最后被一个同学上去解答了。但我们这些农村娃是要和全国考生一起参加高考的。更大的不公在后面，不要以为学校对每个地区的人录取是平等的。 让我们把视野放的更宽一些。就算你在千军万马过独木桥中胜利了，假如你被名牌大学录取了。但你是否知道，中国在世界名校的排行榜上有几所靠在前面？有你的那所名牌学校吗？如果没人告诉你世界的普通话是英语，你就凭汉语去学习和创新吗？如果没人告诉你世界上优秀学科的教科书大多数都是英文，你打算用汉语去学习含有不少错误且在时效性上已经延迟的翻译书吗？如果没人告诉你，世界范围内最先进的科技成果都是以英文形式发表的，你该如何去触摸天空的那道彩虹？ 此时此刻，很多和你同龄的小伙伴已经在各个国家用流利的英语接触新技术的诞生。 努力学习吧，学好你英语的听说读写和专业课。"}],"posts":[{"title":"人工智能职业方向","slug":"人工智能职业方向","date":"2018-11-12T11:02:47.000Z","updated":"2018-11-13T03:06:21.592Z","comments":true,"path":"2018/11/12/人工智能职业方向/","link":"","permalink":"http://yoursite.com/2018/11/12/人工智能职业方向/","excerpt":"","text":"人工智能职业方向学习路线建议 课程名称 难易程度理论基础 大数据的统计学基础 ★理论基础 大数据的矩阵计算基础 ★进阶工具课 R语言数据分析、展现与实例 ★进阶工具课 机器学习 ★★★进阶工具课 Python数据分析 ★进阶工具课 Python机器学习 ★★★进阶工具课 机器学习及其matlab实现—从基础到实践 ★★进阶工具课 GPU并行计算与CUDA编程 ★★进阶工具课 开源计算机视觉库OpenCV从入门到应用 ★★实战应用课 推荐系统 ★★实战应用课 Spark MLlib 机器学习算法与源码解析 ★★★实战应用课 深度学习框架Caffe学习与应用 ★★★实战应用课 自己动手实践神经网络 ★★实战应用课 计算机视觉算法详解与实战开发 ★★★实战应用课 Python自然语言处理 ★★★登峰造极高端课 人工智能前沿系列之生成式对抗网络 ★★★★登峰造极高端课 机器读心术之文本挖掘与自然语言处理 ★★★★登峰造极高端课 机器读心术之神经网络与深度学习 ★★★★","categories":[],"tags":[]},{"title":"炼数成金_黄志洪老师经典语录","slug":"炼数成金-黄志洪老师经典语录","date":"2018-11-12T11:00:19.000Z","updated":"2018-11-13T03:51:24.652Z","comments":true,"path":"2018/11/12/炼数成金-黄志洪老师经典语录/","link":"","permalink":"http://yoursite.com/2018/11/12/炼数成金-黄志洪老师经典语录/","excerpt":"","text":"反正以后大家看书的时候养成一种习惯，反正一堆参考书在这里，你可以翻完一本又一本。如果对这本书的答案还是不满意，你对这本书讲的这个知识的细节还不满意，可以继续翻下一本。如果还不满意，可以看看这本书的索引或者它在解说这段知识的时候提到的参考文献。再顺着参考文献追踪原始论文或者原始材料或者讲清这些知识点的一些综述性的文章或论文，你可以继续细看下去，这个知识就发散式的（黄老师的作用也是指一条路，把关键点敲一敲，有些细节可能无法顾及到，因为每个人都有自己想的问题。如果这个问题你没得到答案，可以通过细节继续往下推敲，通过这些顺藤摸瓜的方法再往下推敲）。 由于卷积神经网络已经用的很普遍了，很少会要求大家去从头写一个卷积神经网络。一般都不会有人这么去做，通常都是利用一个框架（caffe、TensorFlow等）去实现一个卷积神经网络。所以大家也不用很纠结这个事情，就是说我要把每一个细节、每一个梯度怎么算的都弄的很清楚。更重要的是，你怎么通过选择神经网络的工作原理以及你的经验去决定神经网络的结构（用哪些结构更容易得到更好的结果，我应该对哪些参数进行调优，比如我的结构是5x5、6x6啊，用多少个卷积层，多少个直采样层，为什么用这么多，为什么用7个而不是8个—你用更多的时间花在这上面更好）。关于这些如何学习，扔给这些框架就行了。DL09g–1分钟开始讲GPU—-必学OpenCV（预处理）、必学CUDA（速度）。可以做实验的GPU约1000元，新的就三四千元。DL09h，有讲blog中对论文的翻译（1分钟开始）:Deep learning 论文笔记之（四） CNN卷积神经网络推导和实现—Notes on Convolutional Neural Networks数据挖掘系列（10）–卷积神经网络算法的一个实现 1、Neural Network Design **书2、Neural Network and learning machines(很老了）3、Matlab43个案例分析，中文论坛4、人工神经网络理论、设计及应用（韩力群）—简明5、matlab神经网络原理与实例精解 书2：Neural Network and learning machines 这本书写的Hopfield还是很好的书5：实例精解：模拟退火算法讲的比韩力群还好403卫星课程《深度学习框架caffe学习与应用》第6课：受限波尔兹曼机简介—受限Boltzman机：马尔科夫链（数学是最能挣钱的）–&gt;导致Google诞生，Gibbs抽样 周志华，机器学习，核方法Halcon、OpenCV、Octavehttps://zhuanlan.zhihu.com/p/25138563《人工智能：一种现代的方法（第3版）》是最权威、最经典的人工智能教材，已被全世界100多个国家的1200多所大学用作教材。最新外文书https://www.packtpub.com/ 我参加7月算法的课，说实话讲得不痛不痒。ML/DL这种东西没有速成的首先英语很重要，高数基础，矩阵，概率论。。。ML:建议吴恩达视频，台湾林轩田——-DL:建议hinton视频，oxford视频——CNN：CS231n当然paper很有必要，看人家说的，不如看原作者的paper。—-最后就是实践（大多数都是python）","categories":[],"tags":[]},{"title":"seleniumum_自动化测试","slug":"seleniumum-自动化测试","date":"2018-11-12T11:00:19.000Z","updated":"2018-11-13T03:13:00.042Z","comments":true,"path":"2018/11/12/seleniumum-自动化测试/","link":"","permalink":"http://yoursite.com/2018/11/12/seleniumum-自动化测试/","excerpt":"","text":"robotframework——-关键字驱动、数据驱动jenkins——-不需要手动启动，测试可分布式运行到多个环境docker—–&gt;接口测试、单元测试还是不错的，selenium吗压力测试——-jmeter（新手入门）、locust（未来）app测试——appium性能测试 –唯一需要看书学习的 selenium 是一个web的自动化测试工具，不少学习功能自动化的同学开始首选selenium ，相因为它相比QTP有诸多有点： 免费，也不用再为破解QTP而大伤脑筋 小巧，对于不同的语言它只是一个包而已，而QTP需要下载安装1个多G 的程序。 这也是最重要的一点，不管你以前更熟悉C、 java、ruby、python、或都是C# ，你都可以通过selenium完成自动化测试，而QTP只支持VBS 支持多平台：windows、linux、MAC ，支持多浏览器：ie、ff、safari、opera、chrome 支持分布式测试用例的执行，可以把测试用例分布到不同的测试机器的执行，相当于分发机的功能。","categories":[],"tags":[]},{"title":"测试_页面对象模式","slug":"测试-页面对象模式","date":"2018-11-12T10:59:09.000Z","updated":"2018-11-13T03:05:35.168Z","comments":true,"path":"2018/11/12/测试-页面对象模式/","link":"","permalink":"http://yoursite.com/2018/11/12/测试-页面对象模式/","excerpt":"","text":"页面对象模式（Page Object Pattern）： 登陆页面的元素的位置也相应改变，如果你的测试用例没有封装过页面和元素， 每个页面都是拿webdriver 直接写，页面元素定位也分布到测试用例中，这要维护起来要全部改掉测试用例。如果你封装了页面，封装了元素，再封装一个对应的登陆Action，你的每个测试用例是调用的login.action（）。这样，你只需要改变你对象库的内容就完美解决UI变化，而不必一个个修改测试用例。","categories":[],"tags":[]},{"title":"什么是TestNG","slug":"什么是TestNG","date":"2018-11-12T10:58:26.000Z","updated":"2018-11-13T03:05:57.943Z","comments":true,"path":"2018/11/12/什么是TestNG/","link":"","permalink":"http://yoursite.com/2018/11/12/什么是TestNG/","excerpt":"","text":"TestNG是一个功能强大的测试框架，是Junit的一个增强版本。NG 代表“下一代”。TestNG框架提供了以下功能和解答我们的问题：“为什么我们需要TestNG”？1、注释可以帮助我们来组织使测试更容易。2、灵活的测试配置。3、测试例可以更容易地进行分组4、可以使用TestNG实现测试并行5、支持数据驱动测试6、内置的报告","categories":[],"tags":[]},{"title":"selenium测试学习笔记","slug":"selenium测试学习笔记","date":"2018-11-12T10:57:02.000Z","updated":"2018-11-13T03:05:53.784Z","comments":true,"path":"2018/11/12/selenium测试学习笔记/","link":"","permalink":"http://yoursite.com/2018/11/12/selenium测试学习笔记/","excerpt":"","text":"1、搭建自动化测试框架：Junit、maven、SVN、Jenkins（svn提交后，自动检测，执行并生成报告） 2、定位：id、name、css、className、tagName、linkText、Xpath（‘&gt;’可以代替空格） 3、Ctrl + shift + O 补全import4、启动Tomcat： startup，看是否起来：netstat -an | findstr “8080” 起来：LISTEN5、Jenkins起来有欢迎界面：localhost：8080 6、selenium显示等待，WebdriverWait().unit()7、js弹出窗口（现在用的少）alert box —–accept方法 confirm box ——dismiss prompt box—— 8、input[name = middle] , csscelector frameset frame:nth-child(2) frame.switch9、@target-----@Before——-执行Test方法之前执行一次 @After—-执行Test方法之后执行一次10、@BeforeClass———–实例化整个类之前执行一次 @AfterClass——实例化整个类之后执行一次11、hamcrest:断言，功能强大。 推荐书：Junit in action——-8集完 1、@Test(expectie = ArithmeticException.class) public void f() { double a = 4/0} //测试通过2、Test(timeout = 5000) { try{ Thread.sleep(6000); }catch(interruptedException){} } //测试失败3、junit 进行性能测试要复杂一些。TestNG相对简单4、RunWith（Junit4.class —Parameterized.class）5、分组测试：Junit3过时 6、@RunWith(Suite.class)，只能修饰类7、@SuiteClasses用法： @RunWith(Suite.class—只有Runner的子类可放入)、@Suite.SuiteClasses(ATest.class, Btest.class) 8、@Category({接口.class，接口.class}),若只有一个，可省略{}9、@IncludeCategory( @RunWith(Categories.class) @SuiteClasses(ATest.class,BTest.class)10、断言：assertTrue()、assertEqual()","categories":[],"tags":[]},{"title":"selenium测试例子","slug":"selenium测试例子","date":"2018-11-12T10:56:00.000Z","updated":"2018-11-13T03:05:50.383Z","comments":true,"path":"2018/11/12/selenium测试例子/","link":"","permalink":"http://yoursite.com/2018/11/12/selenium测试例子/","excerpt":"","text":"———————————————————Firefox———————————————————-package day01; import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.firefox.FirefoxDriver; public class FirstTest { @Test public void firsttest() { WebDriver driver = new FirefoxDriver(); driver.manage().window().maximize(); driver.get(“http://www.baidu.com&quot;); WebElement webTxt = driver.findElement(By.id(“kw”)); webTxt.sendKeys(“selenium”); WebElement btn = driver.findElement(By.id(“su”)); btn.click(); driver.close(); } } ———————————————-chrome—————————————————————package day01; import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver; public class Chromefirst { @Test public void firsttest() { System.setProperty(&quot;webdriver.chrome.driver&quot;, &quot;D:\\\\Java_Workspace\\\\chromedriver.exe&quot;); WebDriver driver = new ChromeDriver(); driver.manage().window().maximize(); driver.get(&quot;http://www.baidu.com&quot;); WebElement webTxt = driver.findElement(By.id(&quot;kw&quot;)); webTxt.sendKeys(&quot;最新电影&quot;); WebElement btn = driver.findElement(By.id(&quot;su&quot;)); btn.click(); //driver.close(); //System.out.println(&quot;hello word&quot;); } } —————————————–chrome————————————————————package chrome; import org.junit.Test;import org.openqa.selenium.By;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver; public class Enterprise { @Test public void LoginToDefaultPage() { System.setProperty(“webdriver.chrome.driver”, “D:\\Java_Workspace\\chromedriver.exe”); WebDriver driver = new ChromeDriver(); driver.manage().window().maximize(); driver.get(&quot;http://www.jiyuonline.com:8080/QuickJob/action/Common/index&quot;); //点击右上角的“企业登录”按钮 WebElement enterpriseLogin =driver.findElement(By.id(&quot;btn-clogin&quot;)); enterpriseLogin.click(); //填写“会员名” WebElement enterpriseName =driver.findElement(By.id(&quot;memname&quot;)); enterpriseName.sendKeys(&quot;内测单机构扩展公司&quot;); //填写“用户名” WebElement enterpriseUser =driver.findElement(By.id(&quot;username&quot;)); enterpriseUser.sendKeys(&quot;13146421665&quot;); //填写“密码” WebElement enterprisepwd =driver.findElement(By.id(&quot;password&quot;)); enterprisepwd.sendKeys(&quot;aaa111&quot;); //填写“验证码”---企业999999，学校9999 WebElement enterpriseCertificate =driver.findElement(By.id(&quot;authcode&quot;)); enterpriseCertificate.sendKeys(&quot;999999&quot;); //登录 WebElement enterpriseLgn = driver.findElement(By.name(&quot;submit&quot;)); enterpriseLgn.click(); //x掉第一次登录的下端欢迎 WebElement xwelcome = driver.findElement(By.className(&quot;delete&quot;)); xwelcome.click(); //driver.close(); System.out.println(&quot;hello word&quot;); } }","categories":[],"tags":[]},{"title":"达内测试课目录","slug":"达内测试课目录","date":"2018-11-12T10:54:43.000Z","updated":"2018-11-13T03:05:46.600Z","comments":true,"path":"2018/11/12/达内测试课目录/","link":"","permalink":"http://yoursite.com/2018/11/12/达内测试课目录/","excerpt":"","text":"达内测试 视频一：共计83天1、软件测试基础——————————————- 21天 2、Java——————————————- 14天3、Database———————– 7天（sqlServer3天shi，orcale四天） 4、NETCTOSS———–2天5、QTP—————————– ———–11天6、whitebox_testing—–2天 7、QTP_Project——————- 4天8、linux基础————– 3天9、LoadRunner——————- ———–10天10、LR_Project——————- 5天11、综合串讲———— 2天12、做笔试题———— 2天 selenium课程：课程一—–13课课程二——6课课程三——8课课程四——-11课","categories":[],"tags":[]},{"title":"2017年的java学习笔记","slug":"2017年的java学习笔记","date":"2018-11-12T10:53:42.000Z","updated":"2018-11-13T03:05:21.638Z","comments":true,"path":"2018/11/12/2017年的java学习笔记/","link":"","permalink":"http://yoursite.com/2018/11/12/2017年的java学习笔记/","excerpt":"","text":"5天基础—-5天面向对象—-2天高级应用——————————————–5天基础———————————————————-java—-SE—-客户端程序 —-EE—–服务器端程序 —ME—-手机程序 Java内存结构：栈——————局部信息堆——————对象code方法区——类的信息，静态方法 基本类型——-8种引用类型（很多）——基本5种—–类、接口、数组、枚举、标注import java.util.Scanner; 从事测试工具的开发很厉害文档注释 —– /* / ———生成javaDoc文档 单例模式—–一种设计模式——-保证一个类在系统中最多只创建一个对象工厂模式Factory：可以将不同的Animal子类对象看作产品，将获取这些对象的类看作工厂 class AnimalFactory { public static Animal getAnimal(){——-} //静态方法可以通过类名直接调用 }//改变业务时无需修改代码，生产产品的当然是工厂了 修饰符——protected（主要供子类使用）———private（主要本类用） 修饰符 本类 同包 子类 其他public OK——OK——–OK——-OKprotected OK——OK——–OKDefault OK——OKprivate OK Super（）处于构造函数第一行（如果不写，默认也有，在第一行）java.lang.Object类是所有类的共同父类创建子类对象会先创建父类对象 overload—重载——便于用户少记名字override—重写——-子类修改父类方法的定义多态——-1、对象不变 ——-2、编译时调用编译时类型已定义的方法 ——3、运行时调用覆盖后的方法———不能调用子类特有的方法多态——-1、基本类型多态 double 啊= 2； ——-2、类多态 ——-3、方法多态——-1）、编译时多态—–overload 2）、运行时多态—-override 父类 —-编译时的类型—–编译器理解 子类——运行时类型——JVM理解——————————————–5天面向对象—————————————————–需求分析：得到《需求分析规格说明书》是软件分析、设计、开发、测试、维护等的重要依据系统分析：问题空间。OOA，根据名词、动词将问题进行分类和归纳系统设计：解空间。OOD软件建模使用UML语言。UML统一建模语言特点：使用各种图形表达设计1、静态建模——-1）、用例图 ——–2）、类图：类的基本信息以及类的关系，使用UML工具画类图2、动态建模——-时序图：对象的生命周期。按时间顺序表示系统功能的不同步骤myeclipse提供UML插件（需要先注册） 面向对象三大特性：封装、继承、多态（一种类型，呈现多种状态）static、final、abstract： 1、不能修饰局部变量 2、可以修饰属性、方法、代码块、内部类 3、修饰的资源在类加载时被执行或初始化 4、static成员可以通过类名直接调用static修饰属性——加static，修饰类变量———–不加static，修饰实例变量static修饰方法——加static，通过类名直接调用—不加static，通过对象调用若一个类中几乎都是静态方法，称之为工具类 编译—-javac 启动编译器——-Hello.java–&gt;Hello.class运行—java Hello 启动JVM进程，加载Hello.class，执行Hello.main方法static修饰代码块{}——类体、方法体、分支、循环、实例代码块、静态代码块 class Foo { 实例代码块 对象创建时执行（先于构造方法执行） }static { 静态代码块 类加载时执行，仅一次 } 创建对象时的顺序：静态代码块（仅一次）—&gt;实例代码块—-&gt;构造方法java提升系统性能——1、使用缓存 cache 2、使用单例静态代码块：适合写初始化系统环境的程序，如缓存加载 对多态定理3的补充：静态方法—–不能被覆盖，根本就没有多态 static应用：单例模式——保证一个类在系统中最多只会创建一个实例。好处：避免大量创建对象，减少系统垃圾，降低GC启动频率。由于GC消耗系统性能，从而提高java系统性能实现——-1、构造方法私有 2、提供静态方法来获取单例 3、提供静态属性来保存单例 final修饰变量——不加final，变量——–加final，常量，一经赋值，不可改变。 ——-要么在声明时初始化，要么在构造方法中初始化修饰符位置不分先后 接口也是一种引用类型，可以理解为一种特殊的抽象类 —-1、所有属性都是public static final —-2、所有方法都是 public abstract —-3、接口没有构造方法（抽象类有）interface IA { —-；—-；—-}类 implements 接口———接口 extends 接口1、1个类可实现一个接口2、1个类可实现多个接口，多个接口用,分隔 异常：1、java.lang.Throwable: throw new Exception()2、java.lang.Exception：可以捕获并处理3、java.lang.Error：一旦出现，是严重的底层错误，无法挽回异常分类：1、运行时异常： RuntimeException类及其子类（unchecked exception)，编译器不会检测2、非运行时异常：除RuntimeException系列外的Exception以及其他子类（checked exception)，编译器会检测处理异常：1、积极处理 try—-catch—finally: printStackTrace()打印异常栈轨迹，便于调试2、消极处理 throws Exception()throw—-抛出异常，，throws—-声明抛出异常类型 java更适合商业运算、服务器端编程、企业级应用重要API：许多类和接口1、java.awt.基础包2、javax.swing.扩展包，swing编程3、java.awt.event.*事件处理包 GUI编程步骤：1、选择容器吗，JFrame窗体2、设置布局管理器，FlowLayout、BorderLayout、GridLayout3、添加组件4、添加事件处理监听器有很多种，这里关注ActionListener接口，具备事件处理方法 public void actionPerformed(ActionEvent e)","categories":[],"tags":[]},{"title":"普通话考试辅导","slug":"普通话考试辅导","date":"2018-11-12T10:50:19.000Z","updated":"2018-11-13T03:06:16.847Z","comments":true,"path":"2018/11/12/普通话考试辅导/","link":"","permalink":"http://yoursite.com/2018/11/12/普通话考试辅导/","excerpt":"","text":"100分，97-100一级甲等，92-96一级乙等，87-92二级甲等，60以下没有证书。一级甲等做为省级以上出镜播音员。一级乙等播音教学及文艺类主持及北京语文，二甲是国家规定语文老师，二乙80分，绝大多数老师。三甲公务员。丢了重考。国家立法考试。一、单音节100个，10分，3.5分钟。慢了扣0.5-1分。不考轻声儿化，要满响准二、要连读，考变调四、不要说重复（别人说过的，抄袭来背诵的）的，网上抄的扣六分，有重复的酌情扣分","categories":[],"tags":[]},{"title":"春草葳蕤","slug":"春草葳蕤","date":"2018-11-12T10:49:30.000Z","updated":"2018-11-13T03:05:38.958Z","comments":true,"path":"2018/11/12/春草葳蕤/","link":"","permalink":"http://yoursite.com/2018/11/12/春草葳蕤/","excerpt":"","text":"文/春草葳蕤许是走的太急，许是没有去顾及太多，回头看时，日影已偏西，回顾流水，早已不是昨日，回顾花儿，也早早飘离了枝头。人世已非，昨日溜走了，白驹过隙，时光匆匆，太匆匆。往事，物事人非，思来想去，心底也一般的如此透凉。真可谓风絮飘残已化萍，泥莲刚倩藕丝萦；珍重别拈香一瓣，记前生。人到情多情转薄，而今真个不多情；又到断肠回首处，泪偷零。即然，真个不多情，又为何会断肠呢？即然，真个不多情，又为何要泪偷零？难道也是一颗七巧心，连流泪也这般的玲珑，连伤心也这般的婉约。想想还真得是人到情多情转薄，这样要好的多，好的多呢，又会有多好。说出这样一句话来，又多无奈，还是情非得已？思想初恋，情窦萦绕。那些时候，总是想与你相守，哪怕守成一株开放的蔷薇，哪怕守成一树的落叶，哪怕形容枯瘦，哪怕白发翁媪，都不怕，也不去多想，心里只有爱，只想与你守成地老天荒。还记得，那时的我，身体不好，瘦弱恹恹。好似哪里也去不了，可我总想去看海，总想去看红叶，却总没有成行。那是个雨天，春游未曾成行的我，很是伤心，一个人躲在屋子里很是难过，你从山上采回山花，你将一株株山花举在我眼前，沁人心脾，醉我肺腑，你说你为我采回来了山花烂漫，摘回来了花仙子相伴。想想，花开一季，草枯一秋，人生在世，也不过就那么短短的数都数的过来的几万个日子而已，还那么的不开心，还那么的思前想后，将个一往情肠柔的透，将个一颗七巧玲珑心儿煎熬成一杯水，一杯忘情水，不敢饮，不敢喝，一喝心就碎，一饮人就憔悴了。情耐得住多少岁月与沧桑，在浓烈的背后，烈焰之下，也许归与平平淡淡，才是最真切最可靠的。然而，若果遇上一位无情人，遇上一位冷血的人儿呢？又该怎么样呢？有这样的人，无论你为她做的再多再多，她也不会感动，无论你为她付出再多再多，她依然无动于衷。从不懂感恩，从不知回报，好似别人为他做的一切都是应该，好似别人就该对他要好，要付出似得。恋爱中的人，最是甜腻的时候，我爱你，说再多遍也不腻，我想你，听再多次，也不厌。而就有人，一遍也不说，一句也不吐露，一个电话也不主动打给对方，一个信息也不主动发出一个。这样的人你说她是在爱着你，恐怕说给鬼，连鬼也不会信吧，一个爱字，连说都懒怠说，要真的将爱去付诸行动，就更懒怠去爱了吧。那就算了吧，擦肩而过吧，再也无牵扯，再也无联系。谁也不欠谁的。爱，要以爱为主线条，不为别个，只为你心我心，你侬我侬，正如黛玉说我为的是我的心时，宝玉回答：我也为的是我的心，难道你就知你的心，不知我的心不成？你心我心，是一心，你爱我爱是一种爱，情发一处，心心念念也在一处。爱情，要以情为首要，无关物质，无关地位，真可谓，风声雨声，声声入耳都是情，大事小事，事事总关情。情，千丝万缕后，爱的还是那个人，爱，千转百回后，思念的依然是最初遇见的那身影，忘也忘不掉，离也离不开，就算说好，你向你的方向走，我延我的方向行，可最后还是要相遇，还是要有牵扯，有瓜葛。有缘，是躲也躲不开的，无缘，是遇也遇不到的。一个缘字，将人间之情爱用红线缠绕，难解难分。许多时候，可能太再乎，太爱对方，才会有了许许多多，说不清道也道不白的情景情结，读红楼，让我记住了求全之毁，不虞之隙，宝黛之情爱，纯然脱俗，令人扼腕。说到此处，就又要再次提起红楼，读红楼时，总也忘不掉黛玉问的那句：“宝玉，你为什么病了？”宝玉笑着答道：“我为林姑娘病了。”是啊，就这样简简单单的一句，又抵得过多少缠绵悱恻的情语呢，相思成疾，相爱成疾，我病是因你而起，我病要好，是要你来医治，那就是你的爱呀，除此再也无药可医得。读着，眼泪就会情不自禁掉下来，咂在了心坎儿上，这就是情，这就是生死让人相许的情爱呀。想起自己，想起你，你为我所做的一切一切，不是爱，又是什么呢？无论风无论雨的陪伴，无论病无论疾的照顾，一杯水可思其恩爱，一勺羮可念其情深。这么多年你与我相守，不离不弃，你我相识到牵手，风风雨雨，一路走来，几年如一日，从未更改，情爱与日递增，从未消减。回首往事，回放爱情，心中暖意洋洋。爱情，不是虚幻，不是纸上谈兵，是真真实实的生活。一日三餐，无论粗茶淡饭，有你最香；一席一枕，无论草屋陋室，相拥梦甜。爱到深处，你心我心是一心。爱到深处，你人我人是一人。爱你就是爱自己，疼你就是疼自己，你我只有相守在一起，才是最美最完整的人生。爱就是真真实实的生活，爱就是平平淡淡的日子，互敬互爱，互珍爱互疼惜。两个人在一起，没有高贵与贫贱，没有谁为谁应该不应该。付出是甘心情愿，得到要懂得感恩。珍惜生命，真爱生活；珍惜爱情，珍爱日子，人到情多，爱已入骨入髓，铭心刻骨。真真是，情到浓时，红笺为无字，情到深处，莫到不消魂。卷帘西风，黄花为谁瘦？情到深处，情语已凝噎。恰恰还是那句，人到多情，情转薄。","categories":[],"tags":[]},{"title":"杨晓冬xdyang.ustc@gmail.com","slug":"杨晓冬xdyang-ustc-gmail-com","date":"2018-11-12T10:46:03.000Z","updated":"2018-11-13T02:53:06.170Z","comments":true,"path":"2018/11/12/杨晓冬xdyang-ustc-gmail-com/","link":"","permalink":"http://yoursite.com/2018/11/12/杨晓冬xdyang-ustc-gmail-com/","excerpt":"","text":"一、 绪论 为什么要写这篇文章图像处理与计算机视觉基础，经典以及最近发展 从2002年到现在，接触图像快十年了。虽然没有做出什么很出色的工作，不过在这个领域摸爬滚打了十年之后，发现自己对图像处理和计算机视觉的感情越来越深厚。下班之后看看相关的书籍和文献是一件很惬意的事情。平常的一大业余爱好就是收集一些相关的文章，尤其是经典的文章，到现在我的电脑里面已经有了几十G的文章。写这个文档的想法源于我前一段时间整理文献时的一个突发奇想，既然有这个多文献，何不整理出其中的经典，抓住重点来阅读，同时也可以共享给大家。于是当时即兴写了一个《图像处理与计算机视觉中的经典论文》。现在来看，那个文档写得很一般，所共享的论文也非常之有限。就算如此，还是得到了一些网友的夸奖，心里感激不尽。因此，一直想下定决心把这个工作给完善，力求做到尽量全面。 本文是对现有的图像处理和计算机视觉的经典书籍（后面会有推荐）的一个补充。一般的图像处理书籍都是介绍性的介绍某个方法，在每个领域内都会引用几十上百篇参考文献。有时候想深入研究这个领域的时候却发现文献太多，不知如何选择。但实际上在每个领域都有那么三五篇抑或更多是非读不可的经典文献。这些文献除了提出了很经典的算法，同时他们的Introduction和Related work也是对所在的领域很好的总结。读通了这几篇文献也就等于深入了解了这个领域，比单纯的看书收获要多很多。写本文的目的就是想把自己所了解到的各个领域的经典文章整理出来,不用迷失在参考文献的汪洋大海里。 二、 图像处理与计算机视觉相关的书籍 数学 我们所说的图像处理实际上就是数字图像处理，是把真实世界中的连续三维随机信号投影到传感器的二维平面上，采样并量化后得到二维矩阵。数字图像处理就是二维矩阵的处理，而从二维图像中恢复出三维场景就是计算机视觉的主要任务之一。这里面就涉及到了图像处理所涉及到的三个重要属性：连续性，二维矩阵，随机性。所对应的数学知识是高等数学（微积分），线性代数（矩阵论），概率论和随机过程。这三门课也是考研数学的三个组成部分，构成了图像处理和计算机视觉最基础的数学基础。如果想要更进一步，就要到网上搜搜林达华推荐的数学书目了。 信号处理 图像处理其实就是二维和三维信号处理，而处理的信号又有一定的随机性，因此经典信号处理和随机信号处理都是图像处理和计算机视觉中必备的理论基础。2.1经典信号处理信号与系统(第2版) Alan V.Oppenheim等著 刘树棠译离散时间信号处理(第2版) A.V.奥本海姆等著 刘树棠译数字信号处理:理论算法与实现 胡广书 (编者)2.2随机信号处理现代信号处理 张贤达著统计信号处理基础:估计与检测理论 Steven M.Kay等著 罗鹏飞等译自适应滤波器原理(第4版) Simon Haykin著 郑宝玉等译2.3 小波变换信号处理的小波导引:稀疏方法(原书第3版) tephane Malla著, 戴道清等译2.4 信息论信息论基础(原书第2版) Thomas M.Cover等著 阮吉寿等译 模式识别Pattern Recognition and Machine Learning Bishop, Christopher M. Springer模式识别(英文版)(第4版) 西奥多里德斯著Pattern Classification (2nd Edition) Richard O. Duda等著Statistical Pattern Recognition, 3rd Edition Andrew R. Webb等著模式识别(第3版) 张学工著 图像处理与计算机视觉的书籍推荐1、图像处理，分析与机器视觉 第三版 Sonka等著 艾海舟等译———–Image Processing, Analysis and Machine Vision———-(附：这本书是图像处理与计算机视觉里面比较全的一本书了，几乎涵盖了图像视觉领域的各个方面。)2、数字图像处理 第四版 冈萨雷斯等著———-Digital Image Processing 4th———-(附：数字图像处理永远的经典，现在已经出到了第三版，相当给力。我的导师曾经说过，这本书写的很优美，对写英文论文也很有帮助，建议购买英文版的。 计算机视觉：1、Computer Vision: Theory and Algorithm———(附：微软的Szeliski写的一本最新的计算机视觉著作。内容非常丰富，尤其包括了作者的研究兴趣，比如一般的书里面都没有的Image Stitching和 Image Matting等。这也从另一个侧面说明这本书的通用性不如Sonka的那本。不过作者开放了这本书的电子版，可以有选择性的阅读。—Richard Szeliski著2、Computer Vision: A Modern Approach 2nd——–MIT的经典教材。虽然已经过去十年了，还是值得一读。期待第二版—DA Forsyth等著3、Machine vision: theory, algorithms, practicalities 第三版 Davies著——-(附：为数不多的英国人写的书，偏向于工业应用。)4、数字图像处理 第四版 Pratt著———Digital Image Processing—–(附：写作风格独树一帜，也是图像处理领域很不错的一本书。网上也可以找到非常清晰的电子版。) 小结罗嗦了这么多，实际上就是几个建议：（1）基础书千万不可以扔，也不能低价处理给同学或者师弟师妹。不然到时候还得一本本从书店再买回来的。钱是一方面的问题，对着全新的书看完全没有看自己当年上过的课本有感觉。（2）遇到有相关的课，果断选修或者蹭之，比如随机过程，小波分析，模式识别，机器学习，数据挖掘，现代信号处理甚至泛函。多一些理论积累对将来科研和工作都有好处。（3）资金允许的话可以多囤一些经典的书，有的时候从牙缝里面省一点都可以买一本好书。不过千万不要像我一样只囤不看。 图像处理和计算机视觉的分类按照当前流行的分类方法，可以分为以下三部分： A.图像处理：对输入的图像做某种变换，输出仍然是图像，基本不涉及或者很少涉及图像内容的分析。比较典型的有图像变换，图像增强，图像去噪，图像压缩，图像恢复，二值图像处理等等。基于阈值的图像分割也属于图像处理的范畴。一般处理的是单幅图像。 B.图像分析：对图像的内容进行分析，提取有意义的特征，以便于后续的处理。处理的仍然是单幅图像。 C.计算机视觉：对图像分析得到的特征进行分析，提取场景的语义表示，让计算机具有人眼和人脑的能力。这时处理的是多幅图像或者序列图像，当然也包括部分单幅图像。 关于图像处理，图像分析和计算机视觉的划分并没有一个很统一的标准。一般的来说，图像处理的书籍总会或多或少的介绍一些图像分析和计算机视觉的知识，比如冈萨雷斯的数字图像处理。而计算机视觉的书籍基本上都会包括图像处理和图像分析，只是不会介绍的太详细。其实图像处理，图像分析和计算机视觉都可以纳入到计算机视觉的范畴：图像处理-&gt;低层视觉（low level vision），图像分析-&gt;中间层视觉（middle level vision），计算机视觉-&gt;高层视觉（high level vision）。这是一般的计算机视觉或者机器视觉的划分方法。在本文中，仍然按照传统的方法把这个领域划分为图像处理，图像分析和计算机视觉。 图像处理和计算机视觉开源库以及编程语言选择目前在图像处理中有两种最重要的语言：c/c++和matlab。它们各有优点：c/c++比较适合大型的工程，效率较高，而且容易转成硬件语言，是工业界的默认语言之一。而matlab实现起来比较方便，适用于算法的快速验证，而且matlab有成熟的工具箱可以使用，比如图像处理工具箱，信号处理工具箱。它们有一个共同的特点：开源的资源非常多。在学术界matlab使用的非常多，很多作者给出的源代码都是matlab版本。最近由于OpenCV的兴起和不断完善，c/c++在图像处理中的作用越来越大。总的来说，c/c++和matlab都必须掌握，最好是精通，当然侧重在c/c++上对找工作会有很大帮助。 计算机视觉/图像算法/模式识别 工程师们使用的主流编程语言 1) 重中之重：编程语言之C/C++公司面试除了考查应聘者的图像处理基础知识、思维逻辑和个人品性之外，在个人能力之中最重要的一条就是C/C++ 的功底，很多学生朋友们在学校求学阶段并不重视C/C++的学习，导致找工作时处处碰壁(不过对于来参加面试的朋友，如果有较强的逻辑思维或图像理论功底，即使C/C++ 功底弱些，企业还是会偏爱的，毕竟C/C++ 只是一个工具，只要给些时间去钻研还是可以调高的，但是逻辑思维能力和图像理论功底却不是短时期就能提高的。不过一般逻辑思维和图像理论比较强的人，其C/C 水平也是不错的)。 为啥要这么重视C/C++ 呢?答案很简单，与绝大多数其它开发语言相比：C/C++ 的应用领域无法被超越、程序运行效率无法匹敌(当然汇编语言除外)，是使用人数最多、跨平台最广的语言工具(适用于windows/linux/dsp/arm/单片机，当然还有其它一些平台)。简单的说，对于多数应用，其它语言能做的事情C/C++ 几乎都能做，其它语言不能做的事情C/C++ 也可以做。 2) 辅助工具之：MATLAB百度百科中是这么说的：“MATLAB是美国MathWorks公司出品的商业数学软件，用于算法开发、数据可视化、数据分析以及数值计算的高级技术计算语言和交互式环境，主要包括MATLAB和Simulink两大部分。” MATLAB本身是一个不错的仿真、建模工具，但不适用于应用级项目的开发，原因很简单：效率与C/C++ 无法匹敌、不夸平台。(虽然后来出来了codegen可以将MATLAB部分代码转换为C++，但自动生成的还是无法与我们自己写的并优化的C++代码相比;还有MATLAB 的mex接口能够将C++与MABLAB接口对接，既然使用了MATLAB编程，那在应用级的领域还是无法与纯C++相比) 简短说说多年前做学生时的部分学习经历：记得多年前上大学阶段大嘴起初只跟着学校的课程学习了MATLAB的图像处理相关模块(后来才学的C/C++ ),一开始觉得很兴奋，因为只需要编写很少量的代码就可以实现很强大的效果。后来大嘴进一家计算机视觉类的公司实习，发现公司主要用的是C/C++ ,因为MATLAB效率比起C/C++ 相差几倍、十几倍、甚至几十倍，而且要命的是不跨平台，只能用于windows上，后来逼的自己去学了C/C++ ,也正因如此那以后一直到现在特别是当初找工作的时候让我受益匪浅。 对于企业，特别是私企，公司除非给你充足的时间先使用MATLAB做完算法功能，然后再用C/C++ 慢慢改写，而且了解的朋友们都知道，MATLAB的精度与封装的函数标准与C/C++ 有很多不一样，改写起来相对麻烦一些，这样太慢太慢太慢了，项目不等人啊。试问人家成手能够用短时间写出C/C++ 做图像算法并马上可以投入应用，而自己却在那边慢慢磨MATLAB,然后再费老大劲改成纯C(比如需要警觉MATLAB与C++精度不一样的问题、图像处理基础函数标准不一样的问题),那么老板会比较喜欢谁呢？ 如果大家从最初就使用C/C++ ，虽然一开始不数量会写的很慢，但是随着知识量和自各种库（比如图像处理库）的积累，那么总有一天开发速度会快起来的，量的积累，质的飞跃。 说了不少，本人并不否认MATLAB，MATLAB做为建模、仿真以及一些验证的工作(比如图形分析和处理、图表显示、图像仿真、语音仿真等)还是不错的，这方面大嘴绝对力挺MATLAB,目前本人也还在使用中。 一句话：对于多数普通人来讲，如果你的目标是想进企业做为一个实力派工程师，那么大嘴建议您以C/C++ 为主、MATLAB为辅助工具做开发。 3) 辅助工具之：OPENCV随着opencv的问世，图像算法/计算机视觉/模式识别行业的门槛儿变低了，原因有以下几点：(1)opencv是以C/C ++为基础开发出来的，适用性强，windows下适用opencv开发的图像算法应用效率足够快 (2)封装了很多基础图像处理函数和视觉算法，可谓“拿来即可用”。 (3)与嵌入式接口的统一趋势，如前几年大牛们人物搞出来的EMCV(基于C/C++ )，其基础架构和接口与opencv基本一致，但个人认为EMCV很多函数功能尚不完善，目前暂时无法与opencv相比。今后很多人在windows下基于opencv开发后，可以较为轻松的移植到DSP上，这种开发模式会是一种趋势。 说了opencv几条优点,但本人并不赞同只依赖opencv做开发，无论是图像算法行业还是其它很多行业，最重要的不是用什么工具，而是自己的基础知识和逻辑思维方式，opencv封装了很多基础函数，如果朋友们未搞懂其基础原理便加以使用，这种方式并不利于锻炼自己，抽空自己实现一下opencv和MATLAB的封装好的那些基础函数吧，久而久之，你会发现自己站的高度会越来越高的。说到这里，改写一下评述MATLAB时的一句话：”对于多数普通人来讲，如果你的目标是想进企业做为一个实力派工程师，那么大嘴建议您以C/C ++为主、OPENCV和MATLAB为辅助工具做开发。” 4) 简单说说其它语言其它开发语言，比如：C#,JAVA等(还有很多很多语言，不一一举例了)都是不错的开发语言，各自有各自的主应用领域和优势，也有很多很多牛人在使用，不过做图像处理嘛，如果不偏向企业级应用(如嵌入式中)，虽然也可以用，但是了解的朋友做出来的算法效率实在不敢恭维…,又无法夸平台，在一些不要求效率的场合还是可以用的，所以请学生朋友们慎重选择开发语言，因为这与自己以后的择业以及职位方向有很大关系。 本文的特点和结构，以及适合的对象 在本文面向的对象是即将进入或者刚刚进入图像处理和计算机视觉领域的童鞋，可以在阅读书籍的同时参阅这些文献，能对书中提到的算法有比较深刻的理解。由于本文涉及到的范围比较广，如果能对计算机视觉的资深从业者也有一定的帮助，我将倍感欣慰。为了不至太误人子弟，每一篇文章都或多或少的看了一下，最不济也看了摘要(这句话实在整理之前写的，实际上由于精力有限，好多文献都只是大概扫了一眼，然后看了看google的引用数，一般在1000以上就放上来了，把这些文章细细品味一遍也是我近一两年之内的目标)。在成文的过程中，我本人也受益匪浅，希望能对大家也有所帮助。 由于个人精力和视野的关系，有一些我未涉足过的领域不敢斗胆推荐，只是列出了一些引用率比较高的文章，比如摄像机标定和立体视觉。不过将来，由于工作或者其他原因，这些领域也会接触到，我会逐步增减这些领域的文章。尽管如此，仍然会有疏漏，忘见谅。同时文章的挑选也夹带了一些个人的喜好，比如我个人比较喜欢low level方向的，尤其是IJCV和PAMI上面的文章，因此这方面也稍微多点，希望不要引起您的反感。如果有什么意见或者建议，欢迎mail我。文章和资源我都会在我的csdn blog和sina ishare同步更新。 本文的安排如下。第一部分是绪论。第二部分是图像处理中所需要用到的理论基础，主要是这个领域所涉及到的一些比较好的参考书籍。第三部分是计算机视觉中所涉及到的信号处理和模式识别文章。由于图像处理与图像分析太难区分了，第四部分集中讨论了它们。第五部分是计算机视觉部分。最后是小结。","categories":[],"tags":[]},{"title":"面试指南","slug":"面试指南","date":"2018-11-07T08:26:03.000Z","updated":"2018-11-13T03:06:08.327Z","comments":true,"path":"2018/11/07/面试指南/","link":"","permalink":"http://yoursite.com/2018/11/07/面试指南/","excerpt":"","text":"最后送福利：你面试10场，至少有7场，面试题来自：leetcode(username：lengkujiaai,password:abcd15063892554,email:—-)，lintcode，《剑指offer》（或者轻微改编）。如果没有，那也太不正常了。所以，去看什么书，刷什么题，你懂了吧？（这一条结论，可随便找面了10家公司的学长学姐求证。希望工作忙碌之余，答一下这个，能对各位有用）","categories":[],"tags":[]},{"title":"简单介绍","slug":"开始写博客的一个诱因","date":"2018-11-07T04:39:30.000Z","updated":"2018-11-13T03:05:42.392Z","comments":true,"path":"2018/11/07/开始写博客的一个诱因/","link":"","permalink":"http://yoursite.com/2018/11/07/开始写博客的一个诱因/","excerpt":"","text":"2015年就有人建议在GitHub创建一个自己的博客，用来记录自己的学习。当时搭建了一下，简单写了两篇。直到最近辞职找工作（2018.10.12日辞，现在是2018.11.12日），有面试官问到了有没有自己的博客之类的记录自己学习的网站。虽然有一些记录，但只能很抱歉的说没有。最近又重新拾起来，搭建一下，把以前的一些记录（一直在有道云笔记里的部分）也放上面吧。当然，后期还会不断添加自己的一些记录和状态。。。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-11-07T04:21:35.619Z","updated":"2018-11-13T02:50:57.179Z","comments":true,"path":"2018/11/07/hello-world/","link":"","permalink":"http://yoursite.com/2018/11/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}